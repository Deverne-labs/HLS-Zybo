==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 207.544 MB.
INFO: [HLS 200-10] Analyzing design file 'src/gradient_convolution.cpp' ... 
WARNING: [HLS 207-5511] 'Ap_stable' in '#pragma HLS INTERFACE' is deprecated, and it will be removed in future release. It is suggested to replace it with 'Stable Pragma'.: src/gradient_convolution.cpp:31:23
WARNING: [HLS 207-5511] 'Ap_stable' in '#pragma HLS INTERFACE' is deprecated, and it will be removed in future release. It is suggested to replace it with 'Stable Pragma'.: src/gradient_convolution.cpp:32:23
WARNING: [HLS 207-1017] unknown pragma ignored: src/gradient_convolution.cpp:61:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.84 seconds. CPU system time: 0.2 seconds. Elapsed time: 2.65 seconds; current allocated memory: 208.750 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:283:50)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:286:25)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:285:67)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:285:36)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:284:39)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:284:23)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::operator>>(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:260:80)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:304:51)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:307:26)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:306:68)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:306:37)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:305:40)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:305:24)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' into 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::operator<<(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:262:86)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::operator<<(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' into 'GradConvolution(hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>&, int, int)' (src/gradient_convolution.cpp:71:15)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::operator>>(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' into 'GradConvolution(hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>&, int, int)' (src/gradient_convolution.cpp:63:16)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::operator>>(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' into 'GradConvolution(hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>&, int, int)' (src/gradient_convolution.cpp:62:14)
INFO: [HLS 214-178] Inlining function 'GradConvolution(hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>&, int, int)' into 'GradConvolutionUnit(hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>&, int, int)' (src/gradient_convolution.cpp:29:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.41 seconds. CPU system time: 0.14 seconds. Elapsed time: 2.55 seconds; current allocated memory: 210.931 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 210.932 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.04 seconds; current allocated memory: 219.090 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.09 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 230.202 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_60_2' (src/gradient_convolution.cpp:60) in function 'GradConvolutionUnit' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.15 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.16 seconds; current allocated memory: 262.919 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 191.558 MB.
INFO: [HLS 200-10] Analyzing design file 'src/gradient_convolution.cpp' ... 
WARNING: [HLS 207-5511] 'Ap_stable' in '#pragma HLS INTERFACE' is deprecated, and it will be removed in future release. It is suggested to replace it with 'Stable Pragma'.: src/gradient_convolution.cpp:31:23
WARNING: [HLS 207-5511] 'Ap_stable' in '#pragma HLS INTERFACE' is deprecated, and it will be removed in future release. It is suggested to replace it with 'Stable Pragma'.: src/gradient_convolution.cpp:32:23
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.83 seconds. CPU system time: 0.14 seconds. Elapsed time: 2.57 seconds; current allocated memory: 192.795 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:283:50)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:286:25)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:285:67)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:285:36)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:284:39)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:284:23)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::operator>>(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:260:80)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:304:51)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:307:26)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:306:68)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:306:37)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:305:40)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:305:24)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' into 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::operator<<(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:262:86)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>::operator<<(hls::axis<ap_uint<24>, 1ul, 0ul, 0ul> const&)' into 'GradConvolution(hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>&, int, int)' (src/gradient_convolution.cpp:71:15)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::operator>>(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' into 'GradConvolution(hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>&, int, int)' (src/gradient_convolution.cpp:63:16)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::operator>>(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' into 'GradConvolution(hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>&, int, int)' (src/gradient_convolution.cpp:62:14)
INFO: [HLS 214-178] Inlining function 'GradConvolution(hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>&, int, int)' into 'GradConvolutionUnit(hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<24>, 1ul, 0ul, 0ul>, 0>&, int, int)' (src/gradient_convolution.cpp:29:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.42 seconds. CPU system time: 0.13 seconds. Elapsed time: 2.56 seconds; current allocated memory: 194.928 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 194.929 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 203.120 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 214.211 MB.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.15 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.16 seconds; current allocated memory: 246.916 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_59_1' (src/gradient_convolution.cpp:59:27) in function 'GradConvolutionUnit'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.09 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 245.264 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -library=DVR-002
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_export -vendor=Deverne
INFO: [HLS 200-1464] Running solution command: config_export -version=1.0
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -library DVR-002 -rtl vhdl -vendor Deverne -version 1.0 
INFO: [HLS 200-1510] Running: set_directive_top -name GradConvolutionUnit GradConvolutionUnit 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 191.836 MB.
INFO: [HLS 200-10] Analyzing design file 'src/gradient_convolution.cpp' ... 
WARNING: [HLS 207-5511] 'Ap_stable' in '#pragma HLS INTERFACE' is deprecated, and it will be removed in future release. It is suggested to replace it with 'Stable Pragma'.: src/gradient_convolution.cpp:31:23
WARNING: [HLS 207-5511] 'Ap_stable' in '#pragma HLS INTERFACE' is deprecated, and it will be removed in future release. It is suggested to replace it with 'Stable Pragma'.: src/gradient_convolution.cpp:32:23
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 2.81 seconds. CPU system time: 0.18 seconds. Elapsed time: 2.59 seconds; current allocated memory: 192.991 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:283:50)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:286:25)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:285:67)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:285:36)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:284:39)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:284:23)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::read(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' into 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::operator>>(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:260:80)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<16>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:304:51)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<16>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:307:26)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<16>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:306:68)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>::get_user_ptr()' into 'hls::stream<hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<16>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:306:37)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>::get_dest_ptr()' into 'hls::stream<hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<16>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:305:40)
INFO: [HLS 214-131] Inlining function 'hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>::get_id_ptr()' into 'hls::stream<hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<16>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:305:24)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>, 0>::write(hls::axis<ap_uint<16>, 1ul, 0ul, 0ul> const&)' into 'hls::stream<hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>, 0>::operator<<(hls::axis<ap_uint<16>, 1ul, 0ul, 0ul> const&)' (/tools/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/ap_axi_sdata.h:262:86)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::operator>>(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' into 'GradConvolution(hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>, 0>&, int, int)' (src/gradient_convolution.cpp:62:14)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>, 0>::operator<<(hls::axis<ap_uint<16>, 1ul, 0ul, 0ul> const&)' into 'GradConvolution(hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>, 0>&, int, int)' (src/gradient_convolution.cpp:69:15)
INFO: [HLS 214-131] Inlining function 'hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>::operator>>(hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>&)' into 'GradConvolution(hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<8>, 1ul, 0ul, 0ul>, 0>&, hls::stream<hls::axis<ap_uint<16>, 1ul, 0ul, 0ul>, 0>&, int, int)' (src/gradient_convolution.cpp:63:16)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.48 seconds. CPU system time: 0.17 seconds. Elapsed time: 2.65 seconds; current allocated memory: 195.203 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 195.204 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 201.829 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 210.047 MB.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.18 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.19 seconds; current allocated memory: 240.126 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_59_1' (src/gradient_convolution.cpp:59:27) in function 'GradConvolution'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
