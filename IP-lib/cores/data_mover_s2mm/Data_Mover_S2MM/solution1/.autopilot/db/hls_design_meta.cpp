#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("m_axi_MM_video_out_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_MM_video_out_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_MM_video_out_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_MM_video_out_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_MM_video_out_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_MM_video_out_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_MM_video_out_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_MM_video_out_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_MM_video_out_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_MM_video_out_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_MM_video_out_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_MM_video_out_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_MM_video_out_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_MM_video_out_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_MM_video_out_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_MM_video_out_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_MM_video_out_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_MM_video_out_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_MM_video_out_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_MM_video_out_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_MM_video_out_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_MM_video_out_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_MM_video_out_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_MM_video_out_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_MM_video_out_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_MM_video_out_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_MM_video_out_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_MM_video_out_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_MM_video_out_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_MM_video_out_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_MM_video_out_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_MM_video_out_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_MM_video_out_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_MM_video_out_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_MM_video_out_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_MM_video_out_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_MM_video_out_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_MM_video_out_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_MM_video_out_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_MM_video_out_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_MM_video_out_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_MM_video_out_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_MM_video_out_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_MM_video_out_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_MM_video_out_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("STR_video_in_TDATA", 8, hls_in, 1, "axis", "in_data", 1),
	Port_Property("STR_video_in_TVALID", 1, hls_in, 5, "axis", "in_vld", 1),
	Port_Property("STR_video_in_TREADY", 1, hls_out, 5, "axis", "in_acc", 1),
	Port_Property("STR_video_in_TKEEP", 1, hls_in, 2, "axis", "in_data", 1),
	Port_Property("STR_video_in_TSTRB", 1, hls_in, 3, "axis", "in_data", 1),
	Port_Property("STR_video_in_TUSER", 1, hls_in, 4, "axis", "in_data", 1),
	Port_Property("STR_video_in_TLAST", 1, hls_in, 5, "axis", "in_data", 1),
	Port_Property("MM_video_out_offset", 32, hls_in, 6, "ap_none", "in_data", 1),
	Port_Property("image_w", 32, hls_in, 7, "ap_none", "in_data", 1),
	Port_Property("image_h", 32, hls_in, 8, "ap_none", "in_data", 1),
	Port_Property("invert_X", 1, hls_in, 9, "ap_none", "in_data", 1),
	Port_Property("invert_Y", 1, hls_in, 10, "ap_none", "in_data", 1),
	Port_Property("s2mm_line_buffer_size", 16, hls_out, 11, "ap_none", "out_data", 1),
};
const char* HLS_Design_Meta::dut_name = "DataMoverUnit_s2mm_32bits";
