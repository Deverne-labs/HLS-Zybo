-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity DataMoverUnit_s2mm_32bits_dataflow_in_loop_S2M is
port (
    STR_video_in_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    STR_video_in_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    STR_video_in_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    STR_video_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    STR_video_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    image_w : IN STD_LOGIC_VECTOR (31 downto 0);
    invert_X : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_out_AWVALID : OUT STD_LOGIC;
    m_axi_MM_video_out_AWREADY : IN STD_LOGIC;
    m_axi_MM_video_out_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_MM_video_out_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_out_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_MM_video_out_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_MM_video_out_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_MM_video_out_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_MM_video_out_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_MM_video_out_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_MM_video_out_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_MM_video_out_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_MM_video_out_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_out_WVALID : OUT STD_LOGIC;
    m_axi_MM_video_out_WREADY : IN STD_LOGIC;
    m_axi_MM_video_out_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_MM_video_out_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_MM_video_out_WLAST : OUT STD_LOGIC;
    m_axi_MM_video_out_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_out_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_out_ARVALID : OUT STD_LOGIC;
    m_axi_MM_video_out_ARREADY : IN STD_LOGIC;
    m_axi_MM_video_out_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_MM_video_out_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_out_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_MM_video_out_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_MM_video_out_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_MM_video_out_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_MM_video_out_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_MM_video_out_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_MM_video_out_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_MM_video_out_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_MM_video_out_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_out_RVALID : IN STD_LOGIC;
    m_axi_MM_video_out_RREADY : OUT STD_LOGIC;
    m_axi_MM_video_out_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_MM_video_out_RLAST : IN STD_LOGIC;
    m_axi_MM_video_out_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_out_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_out_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_MM_video_out_BVALID : IN STD_LOGIC;
    m_axi_MM_video_out_BREADY : OUT STD_LOGIC;
    m_axi_MM_video_out_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_MM_video_out_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_out_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    ddr_buffer_out : IN STD_LOGIC_VECTOR (31 downto 0);
    DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0 : IN STD_LOGIC_VECTOR (30 downto 0);
    image_h : IN STD_LOGIC_VECTOR (20 downto 0);
    invert_Y : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    image_w_ap_vld : IN STD_LOGIC;
    invert_X_ap_vld : IN STD_LOGIC;
    ddr_buffer_out_ap_vld : IN STD_LOGIC;
    DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_ap_vld : IN STD_LOGIC;
    image_h_ap_vld : IN STD_LOGIC;
    invert_Y_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    STR_video_in_TVALID : IN STD_LOGIC;
    STR_video_in_TREADY : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of DataMoverUnit_s2mm_32bits_dataflow_in_loop_S2M is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

attribute shreg_extract : string;
    signal dataflow_in_loop_S2M_entry4_U0_ap_start : STD_LOGIC;
    signal dataflow_in_loop_S2M_entry4_U0_ap_done : STD_LOGIC;
    signal dataflow_in_loop_S2M_entry4_U0_ap_continue : STD_LOGIC;
    signal dataflow_in_loop_S2M_entry4_U0_ap_idle : STD_LOGIC;
    signal dataflow_in_loop_S2M_entry4_U0_ap_ready : STD_LOGIC;
    signal dataflow_in_loop_S2M_entry4_U0_start_out : STD_LOGIC;
    signal dataflow_in_loop_S2M_entry4_U0_start_write : STD_LOGIC;
    signal dataflow_in_loop_S2M_entry4_U0_image_w_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_S2M_entry4_U0_image_w_out_write : STD_LOGIC;
    signal dataflow_in_loop_S2M_entry4_U0_invert_X_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_S2M_entry4_U0_invert_X_out_write : STD_LOGIC;
    signal dataflow_in_loop_S2M_entry4_U0_ddr_buffer_out_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_S2M_entry4_U0_ddr_buffer_out_out_write : STD_LOGIC;
    signal dataflow_in_loop_S2M_entry4_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_out_din : STD_LOGIC_VECTOR (30 downto 0);
    signal dataflow_in_loop_S2M_entry4_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_out_write : STD_LOGIC;
    signal dataflow_in_loop_S2M_entry4_U0_image_h_out_din : STD_LOGIC_VECTOR (20 downto 0);
    signal dataflow_in_loop_S2M_entry4_U0_image_h_out_write : STD_LOGIC;
    signal dataflow_in_loop_S2M_entry4_U0_invert_Y_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_S2M_entry4_U0_invert_Y_out_write : STD_LOGIC;
    signal FillLocalBuffer7_U0_ap_start : STD_LOGIC;
    signal FillLocalBuffer7_U0_ap_done : STD_LOGIC;
    signal FillLocalBuffer7_U0_ap_continue : STD_LOGIC;
    signal FillLocalBuffer7_U0_ap_idle : STD_LOGIC;
    signal FillLocalBuffer7_U0_ap_ready : STD_LOGIC;
    signal FillLocalBuffer7_U0_STR_video_in_TREADY : STD_LOGIC;
    signal FillLocalBuffer7_U0_image_w_read : STD_LOGIC;
    signal FillLocalBuffer7_U0_invert_X_read : STD_LOGIC;
    signal FillLocalBuffer7_U0_stream_elt_dma_buffer_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal FillLocalBuffer7_U0_stream_elt_dma_buffer_V_ce0 : STD_LOGIC;
    signal FillLocalBuffer7_U0_stream_elt_dma_buffer_V_we0 : STD_LOGIC;
    signal FillLocalBuffer7_U0_stream_elt_dma_buffer_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal FillLocalBuffer7_U0_ddr_buffer_out_read : STD_LOGIC;
    signal FillLocalBuffer7_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_read : STD_LOGIC;
    signal FillLocalBuffer7_U0_image_h_read : STD_LOGIC;
    signal FillLocalBuffer7_U0_invert_Y_read : STD_LOGIC;
    signal FillLocalBuffer7_U0_image_w_c_din : STD_LOGIC_VECTOR (31 downto 0);
    signal FillLocalBuffer7_U0_image_w_c_write : STD_LOGIC;
    signal FillLocalBuffer7_U0_ddr_buffer_out_c_din : STD_LOGIC_VECTOR (31 downto 0);
    signal FillLocalBuffer7_U0_ddr_buffer_out_c_write : STD_LOGIC;
    signal FillLocalBuffer7_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_din : STD_LOGIC_VECTOR (20 downto 0);
    signal FillLocalBuffer7_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_write : STD_LOGIC;
    signal FillLocalBuffer7_U0_image_h_c_din : STD_LOGIC_VECTOR (20 downto 0);
    signal FillLocalBuffer7_U0_image_h_c_write : STD_LOGIC;
    signal FillLocalBuffer7_U0_invert_Y_c_din : STD_LOGIC_VECTOR (0 downto 0);
    signal FillLocalBuffer7_U0_invert_Y_c_write : STD_LOGIC;
    signal ap_channel_done_stream_elt_dma_buffer_V : STD_LOGIC;
    signal FillLocalBuffer7_U0_stream_elt_dma_buffer_V_full_n : STD_LOGIC;
    signal S2M_FormatLocalBuffer_U0_ap_start : STD_LOGIC;
    signal S2M_FormatLocalBuffer_U0_ap_done : STD_LOGIC;
    signal S2M_FormatLocalBuffer_U0_ap_continue : STD_LOGIC;
    signal S2M_FormatLocalBuffer_U0_ap_idle : STD_LOGIC;
    signal S2M_FormatLocalBuffer_U0_ap_ready : STD_LOGIC;
    signal S2M_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal S2M_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_ce0 : STD_LOGIC;
    signal S2M_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal S2M_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_ce1 : STD_LOGIC;
    signal S2M_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal S2M_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_ce0 : STD_LOGIC;
    signal S2M_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_we0 : STD_LOGIC;
    signal S2M_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_axi_elt_dma_buffer_V : STD_LOGIC;
    signal S2M_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_full_n : STD_LOGIC;
    signal DMAWriteMM_U0_ap_start : STD_LOGIC;
    signal DMAWriteMM_U0_ap_done : STD_LOGIC;
    signal DMAWriteMM_U0_ap_continue : STD_LOGIC;
    signal DMAWriteMM_U0_ap_idle : STD_LOGIC;
    signal DMAWriteMM_U0_ap_ready : STD_LOGIC;
    signal DMAWriteMM_U0_m_axi_MM_video_out_AWVALID : STD_LOGIC;
    signal DMAWriteMM_U0_m_axi_MM_video_out_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_WVALID : STD_LOGIC;
    signal DMAWriteMM_U0_m_axi_MM_video_out_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_WLAST : STD_LOGIC;
    signal DMAWriteMM_U0_m_axi_MM_video_out_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_ARVALID : STD_LOGIC;
    signal DMAWriteMM_U0_m_axi_MM_video_out_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal DMAWriteMM_U0_m_axi_MM_video_out_RREADY : STD_LOGIC;
    signal DMAWriteMM_U0_m_axi_MM_video_out_BREADY : STD_LOGIC;
    signal DMAWriteMM_U0_ddr_buffer_out_read : STD_LOGIC;
    signal DMAWriteMM_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_read : STD_LOGIC;
    signal DMAWriteMM_U0_image_h_read : STD_LOGIC;
    signal DMAWriteMM_U0_image_w_read : STD_LOGIC;
    signal DMAWriteMM_U0_invert_Y_read : STD_LOGIC;
    signal DMAWriteMM_U0_axi_elt_dma_buffer_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal DMAWriteMM_U0_axi_elt_dma_buffer_V_ce0 : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal stream_elt_dma_buffer_V_i_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_elt_dma_buffer_V_i_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_elt_dma_buffer_V_t_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_elt_dma_buffer_V_t_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_elt_dma_buffer_V_i_full_n : STD_LOGIC;
    signal stream_elt_dma_buffer_V_t_empty_n : STD_LOGIC;
    signal stream_elt_dma_buffer_V_t_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_elt_dma_buffer_V_t_we1 : STD_LOGIC;
    signal axi_elt_dma_buffer_V_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal axi_elt_dma_buffer_V_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal axi_elt_dma_buffer_V_i_full_n : STD_LOGIC;
    signal axi_elt_dma_buffer_V_t_empty_n : STD_LOGIC;
    signal image_w_c1_full_n : STD_LOGIC;
    signal image_w_c1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal image_w_c1_empty_n : STD_LOGIC;
    signal invert_X_c_full_n : STD_LOGIC;
    signal invert_X_c_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal invert_X_c_empty_n : STD_LOGIC;
    signal ddr_buffer_out_c2_full_n : STD_LOGIC;
    signal ddr_buffer_out_c2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal ddr_buffer_out_c2_empty_n : STD_LOGIC;
    signal DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c3_full_n : STD_LOGIC;
    signal DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c3_dout : STD_LOGIC_VECTOR (30 downto 0);
    signal DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c3_empty_n : STD_LOGIC;
    signal image_h_c4_full_n : STD_LOGIC;
    signal image_h_c4_dout : STD_LOGIC_VECTOR (20 downto 0);
    signal image_h_c4_empty_n : STD_LOGIC;
    signal invert_Y_c5_full_n : STD_LOGIC;
    signal invert_Y_c5_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal invert_Y_c5_empty_n : STD_LOGIC;
    signal image_w_c_full_n : STD_LOGIC;
    signal image_w_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal image_w_c_empty_n : STD_LOGIC;
    signal ddr_buffer_out_c_full_n : STD_LOGIC;
    signal ddr_buffer_out_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal ddr_buffer_out_c_empty_n : STD_LOGIC;
    signal DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_full_n : STD_LOGIC;
    signal DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_dout : STD_LOGIC_VECTOR (20 downto 0);
    signal DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_empty_n : STD_LOGIC;
    signal image_h_c_full_n : STD_LOGIC;
    signal image_h_c_dout : STD_LOGIC_VECTOR (20 downto 0);
    signal image_h_c_empty_n : STD_LOGIC;
    signal invert_Y_c_full_n : STD_LOGIC;
    signal invert_Y_c_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal invert_Y_c_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_FillLocalBuffer7_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_FillLocalBuffer7_U0_full_n : STD_LOGIC;
    signal start_for_FillLocalBuffer7_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_FillLocalBuffer7_U0_empty_n : STD_LOGIC;
    signal FillLocalBuffer7_U0_start_full_n : STD_LOGIC;
    signal FillLocalBuffer7_U0_start_write : STD_LOGIC;
    signal S2M_FormatLocalBuffer_U0_start_full_n : STD_LOGIC;
    signal S2M_FormatLocalBuffer_U0_start_write : STD_LOGIC;
    signal DMAWriteMM_U0_start_full_n : STD_LOGIC;
    signal DMAWriteMM_U0_start_write : STD_LOGIC;

    component DataMoverUnit_s2mm_32bits_dataflow_in_loop_S2M_entry4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        image_w : IN STD_LOGIC_VECTOR (31 downto 0);
        invert_X : IN STD_LOGIC_VECTOR (0 downto 0);
        ddr_buffer_out : IN STD_LOGIC_VECTOR (31 downto 0);
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0 : IN STD_LOGIC_VECTOR (30 downto 0);
        image_h : IN STD_LOGIC_VECTOR (20 downto 0);
        invert_Y : IN STD_LOGIC_VECTOR (0 downto 0);
        image_w_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        image_w_out_full_n : IN STD_LOGIC;
        image_w_out_write : OUT STD_LOGIC;
        invert_X_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        invert_X_out_full_n : IN STD_LOGIC;
        invert_X_out_write : OUT STD_LOGIC;
        ddr_buffer_out_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        ddr_buffer_out_out_full_n : IN STD_LOGIC;
        ddr_buffer_out_out_write : OUT STD_LOGIC;
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_out_din : OUT STD_LOGIC_VECTOR (30 downto 0);
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_out_full_n : IN STD_LOGIC;
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_out_write : OUT STD_LOGIC;
        image_h_out_din : OUT STD_LOGIC_VECTOR (20 downto 0);
        image_h_out_full_n : IN STD_LOGIC;
        image_h_out_write : OUT STD_LOGIC;
        invert_Y_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        invert_Y_out_full_n : IN STD_LOGIC;
        invert_Y_out_write : OUT STD_LOGIC );
    end component;


    component DataMoverUnit_s2mm_32bits_FillLocalBuffer7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        STR_video_in_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        STR_video_in_TVALID : IN STD_LOGIC;
        STR_video_in_TREADY : OUT STD_LOGIC;
        STR_video_in_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        STR_video_in_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        STR_video_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        STR_video_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        image_w_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        image_w_empty_n : IN STD_LOGIC;
        image_w_read : OUT STD_LOGIC;
        invert_X_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        invert_X_empty_n : IN STD_LOGIC;
        invert_X_read : OUT STD_LOGIC;
        stream_elt_dma_buffer_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        stream_elt_dma_buffer_V_ce0 : OUT STD_LOGIC;
        stream_elt_dma_buffer_V_we0 : OUT STD_LOGIC;
        stream_elt_dma_buffer_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ddr_buffer_out_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        ddr_buffer_out_empty_n : IN STD_LOGIC;
        ddr_buffer_out_read : OUT STD_LOGIC;
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_dout : IN STD_LOGIC_VECTOR (30 downto 0);
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_empty_n : IN STD_LOGIC;
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_read : OUT STD_LOGIC;
        image_h_dout : IN STD_LOGIC_VECTOR (20 downto 0);
        image_h_empty_n : IN STD_LOGIC;
        image_h_read : OUT STD_LOGIC;
        invert_Y_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        invert_Y_empty_n : IN STD_LOGIC;
        invert_Y_read : OUT STD_LOGIC;
        image_w_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        image_w_c_full_n : IN STD_LOGIC;
        image_w_c_write : OUT STD_LOGIC;
        ddr_buffer_out_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        ddr_buffer_out_c_full_n : IN STD_LOGIC;
        ddr_buffer_out_c_write : OUT STD_LOGIC;
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_din : OUT STD_LOGIC_VECTOR (20 downto 0);
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_full_n : IN STD_LOGIC;
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_write : OUT STD_LOGIC;
        image_h_c_din : OUT STD_LOGIC_VECTOR (20 downto 0);
        image_h_c_full_n : IN STD_LOGIC;
        image_h_c_write : OUT STD_LOGIC;
        invert_Y_c_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        invert_Y_c_full_n : IN STD_LOGIC;
        invert_Y_c_write : OUT STD_LOGIC );
    end component;


    component DataMoverUnit_s2mm_32bits_S2M_FormatLocalBuffer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        stream_elt_dma_buffer_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        stream_elt_dma_buffer_V_ce0 : OUT STD_LOGIC;
        stream_elt_dma_buffer_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        stream_elt_dma_buffer_V_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        stream_elt_dma_buffer_V_ce1 : OUT STD_LOGIC;
        stream_elt_dma_buffer_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        axi_elt_dma_buffer_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        axi_elt_dma_buffer_V_ce0 : OUT STD_LOGIC;
        axi_elt_dma_buffer_V_we0 : OUT STD_LOGIC;
        axi_elt_dma_buffer_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DataMoverUnit_s2mm_32bits_DMAWriteMM IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_MM_video_out_AWVALID : OUT STD_LOGIC;
        m_axi_MM_video_out_AWREADY : IN STD_LOGIC;
        m_axi_MM_video_out_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_MM_video_out_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_out_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_MM_video_out_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_MM_video_out_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_MM_video_out_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_MM_video_out_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_MM_video_out_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_MM_video_out_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_MM_video_out_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_MM_video_out_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_out_WVALID : OUT STD_LOGIC;
        m_axi_MM_video_out_WREADY : IN STD_LOGIC;
        m_axi_MM_video_out_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_MM_video_out_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_MM_video_out_WLAST : OUT STD_LOGIC;
        m_axi_MM_video_out_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_out_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_out_ARVALID : OUT STD_LOGIC;
        m_axi_MM_video_out_ARREADY : IN STD_LOGIC;
        m_axi_MM_video_out_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_MM_video_out_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_out_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_MM_video_out_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_MM_video_out_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_MM_video_out_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_MM_video_out_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_MM_video_out_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_MM_video_out_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_MM_video_out_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_MM_video_out_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_out_RVALID : IN STD_LOGIC;
        m_axi_MM_video_out_RREADY : OUT STD_LOGIC;
        m_axi_MM_video_out_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_MM_video_out_RLAST : IN STD_LOGIC;
        m_axi_MM_video_out_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_out_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_out_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_MM_video_out_BVALID : IN STD_LOGIC;
        m_axi_MM_video_out_BREADY : OUT STD_LOGIC;
        m_axi_MM_video_out_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_MM_video_out_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_out_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        ddr_buffer_out_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        ddr_buffer_out_empty_n : IN STD_LOGIC;
        ddr_buffer_out_read : OUT STD_LOGIC;
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_dout : IN STD_LOGIC_VECTOR (20 downto 0);
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_empty_n : IN STD_LOGIC;
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_read : OUT STD_LOGIC;
        image_h_dout : IN STD_LOGIC_VECTOR (20 downto 0);
        image_h_empty_n : IN STD_LOGIC;
        image_h_read : OUT STD_LOGIC;
        image_w_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        image_w_empty_n : IN STD_LOGIC;
        image_w_read : OUT STD_LOGIC;
        invert_Y_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        invert_Y_empty_n : IN STD_LOGIC;
        invert_Y_read : OUT STD_LOGIC;
        axi_elt_dma_buffer_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        axi_elt_dma_buffer_V_ce0 : OUT STD_LOGIC;
        axi_elt_dma_buffer_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DataMoverUnit_s2mm_32bits_dataflow_in_loop_S2M_stream_elt_dma_buffer_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component DataMoverUnit_s2mm_32bits_dataflow_in_loop_S2M_axi_elt_dma_buffer_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component DataMoverUnit_s2mm_32bits_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component DataMoverUnit_s2mm_32bits_fifo_w1_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component DataMoverUnit_s2mm_32bits_fifo_w31_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (30 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (30 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component DataMoverUnit_s2mm_32bits_fifo_w21_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (20 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (20 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component DataMoverUnit_s2mm_32bits_fifo_w32_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component DataMoverUnit_s2mm_32bits_fifo_w21_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (20 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (20 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component DataMoverUnit_s2mm_32bits_fifo_w1_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component DataMoverUnit_s2mm_32bits_start_for_FillLocalBuffer7_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    dataflow_in_loop_S2M_entry4_U0 : component DataMoverUnit_s2mm_32bits_dataflow_in_loop_S2M_entry4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dataflow_in_loop_S2M_entry4_U0_ap_start,
        start_full_n => start_for_FillLocalBuffer7_U0_full_n,
        ap_done => dataflow_in_loop_S2M_entry4_U0_ap_done,
        ap_continue => dataflow_in_loop_S2M_entry4_U0_ap_continue,
        ap_idle => dataflow_in_loop_S2M_entry4_U0_ap_idle,
        ap_ready => dataflow_in_loop_S2M_entry4_U0_ap_ready,
        start_out => dataflow_in_loop_S2M_entry4_U0_start_out,
        start_write => dataflow_in_loop_S2M_entry4_U0_start_write,
        image_w => image_w,
        invert_X => invert_X,
        ddr_buffer_out => ddr_buffer_out,
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0 => DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0,
        image_h => image_h,
        invert_Y => invert_Y,
        image_w_out_din => dataflow_in_loop_S2M_entry4_U0_image_w_out_din,
        image_w_out_full_n => image_w_c1_full_n,
        image_w_out_write => dataflow_in_loop_S2M_entry4_U0_image_w_out_write,
        invert_X_out_din => dataflow_in_loop_S2M_entry4_U0_invert_X_out_din,
        invert_X_out_full_n => invert_X_c_full_n,
        invert_X_out_write => dataflow_in_loop_S2M_entry4_U0_invert_X_out_write,
        ddr_buffer_out_out_din => dataflow_in_loop_S2M_entry4_U0_ddr_buffer_out_out_din,
        ddr_buffer_out_out_full_n => ddr_buffer_out_c2_full_n,
        ddr_buffer_out_out_write => dataflow_in_loop_S2M_entry4_U0_ddr_buffer_out_out_write,
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_out_din => dataflow_in_loop_S2M_entry4_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_out_din,
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_out_full_n => DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c3_full_n,
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_out_write => dataflow_in_loop_S2M_entry4_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_out_write,
        image_h_out_din => dataflow_in_loop_S2M_entry4_U0_image_h_out_din,
        image_h_out_full_n => image_h_c4_full_n,
        image_h_out_write => dataflow_in_loop_S2M_entry4_U0_image_h_out_write,
        invert_Y_out_din => dataflow_in_loop_S2M_entry4_U0_invert_Y_out_din,
        invert_Y_out_full_n => invert_Y_c5_full_n,
        invert_Y_out_write => dataflow_in_loop_S2M_entry4_U0_invert_Y_out_write);

    FillLocalBuffer7_U0 : component DataMoverUnit_s2mm_32bits_FillLocalBuffer7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => FillLocalBuffer7_U0_ap_start,
        ap_done => FillLocalBuffer7_U0_ap_done,
        ap_continue => FillLocalBuffer7_U0_ap_continue,
        ap_idle => FillLocalBuffer7_U0_ap_idle,
        ap_ready => FillLocalBuffer7_U0_ap_ready,
        STR_video_in_TDATA => STR_video_in_TDATA,
        STR_video_in_TVALID => STR_video_in_TVALID,
        STR_video_in_TREADY => FillLocalBuffer7_U0_STR_video_in_TREADY,
        STR_video_in_TKEEP => STR_video_in_TKEEP,
        STR_video_in_TSTRB => STR_video_in_TSTRB,
        STR_video_in_TUSER => STR_video_in_TUSER,
        STR_video_in_TLAST => STR_video_in_TLAST,
        image_w_dout => image_w_c1_dout,
        image_w_empty_n => image_w_c1_empty_n,
        image_w_read => FillLocalBuffer7_U0_image_w_read,
        invert_X_dout => invert_X_c_dout,
        invert_X_empty_n => invert_X_c_empty_n,
        invert_X_read => FillLocalBuffer7_U0_invert_X_read,
        stream_elt_dma_buffer_V_address0 => FillLocalBuffer7_U0_stream_elt_dma_buffer_V_address0,
        stream_elt_dma_buffer_V_ce0 => FillLocalBuffer7_U0_stream_elt_dma_buffer_V_ce0,
        stream_elt_dma_buffer_V_we0 => FillLocalBuffer7_U0_stream_elt_dma_buffer_V_we0,
        stream_elt_dma_buffer_V_d0 => FillLocalBuffer7_U0_stream_elt_dma_buffer_V_d0,
        ddr_buffer_out_dout => ddr_buffer_out_c2_dout,
        ddr_buffer_out_empty_n => ddr_buffer_out_c2_empty_n,
        ddr_buffer_out_read => FillLocalBuffer7_U0_ddr_buffer_out_read,
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_dout => DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c3_dout,
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_empty_n => DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c3_empty_n,
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_read => FillLocalBuffer7_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_read,
        image_h_dout => image_h_c4_dout,
        image_h_empty_n => image_h_c4_empty_n,
        image_h_read => FillLocalBuffer7_U0_image_h_read,
        invert_Y_dout => invert_Y_c5_dout,
        invert_Y_empty_n => invert_Y_c5_empty_n,
        invert_Y_read => FillLocalBuffer7_U0_invert_Y_read,
        image_w_c_din => FillLocalBuffer7_U0_image_w_c_din,
        image_w_c_full_n => image_w_c_full_n,
        image_w_c_write => FillLocalBuffer7_U0_image_w_c_write,
        ddr_buffer_out_c_din => FillLocalBuffer7_U0_ddr_buffer_out_c_din,
        ddr_buffer_out_c_full_n => ddr_buffer_out_c_full_n,
        ddr_buffer_out_c_write => FillLocalBuffer7_U0_ddr_buffer_out_c_write,
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_din => FillLocalBuffer7_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_din,
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_full_n => DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_full_n,
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_write => FillLocalBuffer7_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_write,
        image_h_c_din => FillLocalBuffer7_U0_image_h_c_din,
        image_h_c_full_n => image_h_c_full_n,
        image_h_c_write => FillLocalBuffer7_U0_image_h_c_write,
        invert_Y_c_din => FillLocalBuffer7_U0_invert_Y_c_din,
        invert_Y_c_full_n => invert_Y_c_full_n,
        invert_Y_c_write => FillLocalBuffer7_U0_invert_Y_c_write);

    S2M_FormatLocalBuffer_U0 : component DataMoverUnit_s2mm_32bits_S2M_FormatLocalBuffer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => S2M_FormatLocalBuffer_U0_ap_start,
        ap_done => S2M_FormatLocalBuffer_U0_ap_done,
        ap_continue => S2M_FormatLocalBuffer_U0_ap_continue,
        ap_idle => S2M_FormatLocalBuffer_U0_ap_idle,
        ap_ready => S2M_FormatLocalBuffer_U0_ap_ready,
        stream_elt_dma_buffer_V_address0 => S2M_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_address0,
        stream_elt_dma_buffer_V_ce0 => S2M_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_ce0,
        stream_elt_dma_buffer_V_q0 => stream_elt_dma_buffer_V_t_q0,
        stream_elt_dma_buffer_V_address1 => S2M_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_address1,
        stream_elt_dma_buffer_V_ce1 => S2M_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_ce1,
        stream_elt_dma_buffer_V_q1 => stream_elt_dma_buffer_V_t_q1,
        axi_elt_dma_buffer_V_address0 => S2M_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_address0,
        axi_elt_dma_buffer_V_ce0 => S2M_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_ce0,
        axi_elt_dma_buffer_V_we0 => S2M_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_we0,
        axi_elt_dma_buffer_V_d0 => S2M_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_d0);

    DMAWriteMM_U0 : component DataMoverUnit_s2mm_32bits_DMAWriteMM
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => DMAWriteMM_U0_ap_start,
        ap_done => DMAWriteMM_U0_ap_done,
        ap_continue => DMAWriteMM_U0_ap_continue,
        ap_idle => DMAWriteMM_U0_ap_idle,
        ap_ready => DMAWriteMM_U0_ap_ready,
        m_axi_MM_video_out_AWVALID => DMAWriteMM_U0_m_axi_MM_video_out_AWVALID,
        m_axi_MM_video_out_AWREADY => m_axi_MM_video_out_AWREADY,
        m_axi_MM_video_out_AWADDR => DMAWriteMM_U0_m_axi_MM_video_out_AWADDR,
        m_axi_MM_video_out_AWID => DMAWriteMM_U0_m_axi_MM_video_out_AWID,
        m_axi_MM_video_out_AWLEN => DMAWriteMM_U0_m_axi_MM_video_out_AWLEN,
        m_axi_MM_video_out_AWSIZE => DMAWriteMM_U0_m_axi_MM_video_out_AWSIZE,
        m_axi_MM_video_out_AWBURST => DMAWriteMM_U0_m_axi_MM_video_out_AWBURST,
        m_axi_MM_video_out_AWLOCK => DMAWriteMM_U0_m_axi_MM_video_out_AWLOCK,
        m_axi_MM_video_out_AWCACHE => DMAWriteMM_U0_m_axi_MM_video_out_AWCACHE,
        m_axi_MM_video_out_AWPROT => DMAWriteMM_U0_m_axi_MM_video_out_AWPROT,
        m_axi_MM_video_out_AWQOS => DMAWriteMM_U0_m_axi_MM_video_out_AWQOS,
        m_axi_MM_video_out_AWREGION => DMAWriteMM_U0_m_axi_MM_video_out_AWREGION,
        m_axi_MM_video_out_AWUSER => DMAWriteMM_U0_m_axi_MM_video_out_AWUSER,
        m_axi_MM_video_out_WVALID => DMAWriteMM_U0_m_axi_MM_video_out_WVALID,
        m_axi_MM_video_out_WREADY => m_axi_MM_video_out_WREADY,
        m_axi_MM_video_out_WDATA => DMAWriteMM_U0_m_axi_MM_video_out_WDATA,
        m_axi_MM_video_out_WSTRB => DMAWriteMM_U0_m_axi_MM_video_out_WSTRB,
        m_axi_MM_video_out_WLAST => DMAWriteMM_U0_m_axi_MM_video_out_WLAST,
        m_axi_MM_video_out_WID => DMAWriteMM_U0_m_axi_MM_video_out_WID,
        m_axi_MM_video_out_WUSER => DMAWriteMM_U0_m_axi_MM_video_out_WUSER,
        m_axi_MM_video_out_ARVALID => DMAWriteMM_U0_m_axi_MM_video_out_ARVALID,
        m_axi_MM_video_out_ARREADY => ap_const_logic_0,
        m_axi_MM_video_out_ARADDR => DMAWriteMM_U0_m_axi_MM_video_out_ARADDR,
        m_axi_MM_video_out_ARID => DMAWriteMM_U0_m_axi_MM_video_out_ARID,
        m_axi_MM_video_out_ARLEN => DMAWriteMM_U0_m_axi_MM_video_out_ARLEN,
        m_axi_MM_video_out_ARSIZE => DMAWriteMM_U0_m_axi_MM_video_out_ARSIZE,
        m_axi_MM_video_out_ARBURST => DMAWriteMM_U0_m_axi_MM_video_out_ARBURST,
        m_axi_MM_video_out_ARLOCK => DMAWriteMM_U0_m_axi_MM_video_out_ARLOCK,
        m_axi_MM_video_out_ARCACHE => DMAWriteMM_U0_m_axi_MM_video_out_ARCACHE,
        m_axi_MM_video_out_ARPROT => DMAWriteMM_U0_m_axi_MM_video_out_ARPROT,
        m_axi_MM_video_out_ARQOS => DMAWriteMM_U0_m_axi_MM_video_out_ARQOS,
        m_axi_MM_video_out_ARREGION => DMAWriteMM_U0_m_axi_MM_video_out_ARREGION,
        m_axi_MM_video_out_ARUSER => DMAWriteMM_U0_m_axi_MM_video_out_ARUSER,
        m_axi_MM_video_out_RVALID => ap_const_logic_0,
        m_axi_MM_video_out_RREADY => DMAWriteMM_U0_m_axi_MM_video_out_RREADY,
        m_axi_MM_video_out_RDATA => ap_const_lv32_0,
        m_axi_MM_video_out_RLAST => ap_const_logic_0,
        m_axi_MM_video_out_RID => ap_const_lv1_0,
        m_axi_MM_video_out_RUSER => ap_const_lv1_0,
        m_axi_MM_video_out_RRESP => ap_const_lv2_0,
        m_axi_MM_video_out_BVALID => m_axi_MM_video_out_BVALID,
        m_axi_MM_video_out_BREADY => DMAWriteMM_U0_m_axi_MM_video_out_BREADY,
        m_axi_MM_video_out_BRESP => m_axi_MM_video_out_BRESP,
        m_axi_MM_video_out_BID => m_axi_MM_video_out_BID,
        m_axi_MM_video_out_BUSER => m_axi_MM_video_out_BUSER,
        ddr_buffer_out_dout => ddr_buffer_out_c_dout,
        ddr_buffer_out_empty_n => ddr_buffer_out_c_empty_n,
        ddr_buffer_out_read => DMAWriteMM_U0_ddr_buffer_out_read,
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_dout => DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_dout,
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_empty_n => DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_empty_n,
        DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_read => DMAWriteMM_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_read,
        image_h_dout => image_h_c_dout,
        image_h_empty_n => image_h_c_empty_n,
        image_h_read => DMAWriteMM_U0_image_h_read,
        image_w_dout => image_w_c_dout,
        image_w_empty_n => image_w_c_empty_n,
        image_w_read => DMAWriteMM_U0_image_w_read,
        invert_Y_dout => invert_Y_c_dout,
        invert_Y_empty_n => invert_Y_c_empty_n,
        invert_Y_read => DMAWriteMM_U0_invert_Y_read,
        axi_elt_dma_buffer_V_address0 => DMAWriteMM_U0_axi_elt_dma_buffer_V_address0,
        axi_elt_dma_buffer_V_ce0 => DMAWriteMM_U0_axi_elt_dma_buffer_V_ce0,
        axi_elt_dma_buffer_V_q0 => axi_elt_dma_buffer_V_t_q0);

    stream_elt_dma_buffer_V_U : component DataMoverUnit_s2mm_32bits_dataflow_in_loop_S2M_stream_elt_dma_buffer_V
    generic map (
        DataWidth => 8,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => FillLocalBuffer7_U0_stream_elt_dma_buffer_V_address0,
        i_ce0 => FillLocalBuffer7_U0_stream_elt_dma_buffer_V_ce0,
        i_we0 => FillLocalBuffer7_U0_stream_elt_dma_buffer_V_we0,
        i_d0 => FillLocalBuffer7_U0_stream_elt_dma_buffer_V_d0,
        i_q0 => stream_elt_dma_buffer_V_i_q0,
        i_address1 => ap_const_lv11_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => stream_elt_dma_buffer_V_i_q1,
        t_address0 => S2M_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_address0,
        t_ce0 => S2M_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv8_0,
        t_q0 => stream_elt_dma_buffer_V_t_q0,
        t_address1 => S2M_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_address1,
        t_ce1 => S2M_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_ce1,
        t_q1 => stream_elt_dma_buffer_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => stream_elt_dma_buffer_V_i_full_n,
        i_write => FillLocalBuffer7_U0_ap_done,
        t_empty_n => stream_elt_dma_buffer_V_t_empty_n,
        t_read => S2M_FormatLocalBuffer_U0_ap_ready);

    axi_elt_dma_buffer_V_U : component DataMoverUnit_s2mm_32bits_dataflow_in_loop_S2M_axi_elt_dma_buffer_V
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => S2M_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_address0,
        i_ce0 => S2M_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_ce0,
        i_we0 => S2M_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_we0,
        i_d0 => S2M_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_d0,
        i_q0 => axi_elt_dma_buffer_V_i_q0,
        t_address0 => DMAWriteMM_U0_axi_elt_dma_buffer_V_address0,
        t_ce0 => DMAWriteMM_U0_axi_elt_dma_buffer_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => axi_elt_dma_buffer_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => axi_elt_dma_buffer_V_i_full_n,
        i_write => S2M_FormatLocalBuffer_U0_ap_done,
        t_empty_n => axi_elt_dma_buffer_V_t_empty_n,
        t_read => DMAWriteMM_U0_ap_ready);

    image_w_c1_U : component DataMoverUnit_s2mm_32bits_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_S2M_entry4_U0_image_w_out_din,
        if_full_n => image_w_c1_full_n,
        if_write => dataflow_in_loop_S2M_entry4_U0_image_w_out_write,
        if_dout => image_w_c1_dout,
        if_empty_n => image_w_c1_empty_n,
        if_read => FillLocalBuffer7_U0_image_w_read);

    invert_X_c_U : component DataMoverUnit_s2mm_32bits_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_S2M_entry4_U0_invert_X_out_din,
        if_full_n => invert_X_c_full_n,
        if_write => dataflow_in_loop_S2M_entry4_U0_invert_X_out_write,
        if_dout => invert_X_c_dout,
        if_empty_n => invert_X_c_empty_n,
        if_read => FillLocalBuffer7_U0_invert_X_read);

    ddr_buffer_out_c2_U : component DataMoverUnit_s2mm_32bits_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_S2M_entry4_U0_ddr_buffer_out_out_din,
        if_full_n => ddr_buffer_out_c2_full_n,
        if_write => dataflow_in_loop_S2M_entry4_U0_ddr_buffer_out_out_write,
        if_dout => ddr_buffer_out_c2_dout,
        if_empty_n => ddr_buffer_out_c2_empty_n,
        if_read => FillLocalBuffer7_U0_ddr_buffer_out_read);

    DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c3_U : component DataMoverUnit_s2mm_32bits_fifo_w31_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_S2M_entry4_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_out_din,
        if_full_n => DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c3_full_n,
        if_write => dataflow_in_loop_S2M_entry4_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_out_write,
        if_dout => DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c3_dout,
        if_empty_n => DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c3_empty_n,
        if_read => FillLocalBuffer7_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_read);

    image_h_c4_U : component DataMoverUnit_s2mm_32bits_fifo_w21_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_S2M_entry4_U0_image_h_out_din,
        if_full_n => image_h_c4_full_n,
        if_write => dataflow_in_loop_S2M_entry4_U0_image_h_out_write,
        if_dout => image_h_c4_dout,
        if_empty_n => image_h_c4_empty_n,
        if_read => FillLocalBuffer7_U0_image_h_read);

    invert_Y_c5_U : component DataMoverUnit_s2mm_32bits_fifo_w1_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_S2M_entry4_U0_invert_Y_out_din,
        if_full_n => invert_Y_c5_full_n,
        if_write => dataflow_in_loop_S2M_entry4_U0_invert_Y_out_write,
        if_dout => invert_Y_c5_dout,
        if_empty_n => invert_Y_c5_empty_n,
        if_read => FillLocalBuffer7_U0_invert_Y_read);

    image_w_c_U : component DataMoverUnit_s2mm_32bits_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => FillLocalBuffer7_U0_image_w_c_din,
        if_full_n => image_w_c_full_n,
        if_write => FillLocalBuffer7_U0_image_w_c_write,
        if_dout => image_w_c_dout,
        if_empty_n => image_w_c_empty_n,
        if_read => DMAWriteMM_U0_image_w_read);

    ddr_buffer_out_c_U : component DataMoverUnit_s2mm_32bits_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => FillLocalBuffer7_U0_ddr_buffer_out_c_din,
        if_full_n => ddr_buffer_out_c_full_n,
        if_write => FillLocalBuffer7_U0_ddr_buffer_out_c_write,
        if_dout => ddr_buffer_out_c_dout,
        if_empty_n => ddr_buffer_out_c_empty_n,
        if_read => DMAWriteMM_U0_ddr_buffer_out_read);

    DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_U : component DataMoverUnit_s2mm_32bits_fifo_w21_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => FillLocalBuffer7_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_din,
        if_full_n => DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_full_n,
        if_write => FillLocalBuffer7_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_write,
        if_dout => DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_dout,
        if_empty_n => DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_c_empty_n,
        if_read => DMAWriteMM_U0_DataMover_s2mm_32bits_hls_stream_hls_axis_ap_uint_8_1ul_0ul_0ul_0_ap_uint_32_volatile_int_int_ap_uint_1_ap_uint_1_i_0_read);

    image_h_c_U : component DataMoverUnit_s2mm_32bits_fifo_w21_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => FillLocalBuffer7_U0_image_h_c_din,
        if_full_n => image_h_c_full_n,
        if_write => FillLocalBuffer7_U0_image_h_c_write,
        if_dout => image_h_c_dout,
        if_empty_n => image_h_c_empty_n,
        if_read => DMAWriteMM_U0_image_h_read);

    invert_Y_c_U : component DataMoverUnit_s2mm_32bits_fifo_w1_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => FillLocalBuffer7_U0_invert_Y_c_din,
        if_full_n => invert_Y_c_full_n,
        if_write => FillLocalBuffer7_U0_invert_Y_c_write,
        if_dout => invert_Y_c_dout,
        if_empty_n => invert_Y_c_empty_n,
        if_read => DMAWriteMM_U0_invert_Y_read);

    start_for_FillLocalBuffer7_U0_U : component DataMoverUnit_s2mm_32bits_start_for_FillLocalBuffer7_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_FillLocalBuffer7_U0_din,
        if_full_n => start_for_FillLocalBuffer7_U0_full_n,
        if_write => dataflow_in_loop_S2M_entry4_U0_start_write,
        if_dout => start_for_FillLocalBuffer7_U0_dout,
        if_empty_n => start_for_FillLocalBuffer7_U0_empty_n,
        if_read => FillLocalBuffer7_U0_ap_ready);




    DMAWriteMM_U0_ap_continue <= ap_continue;
    DMAWriteMM_U0_ap_start <= axi_elt_dma_buffer_V_t_empty_n;
    DMAWriteMM_U0_start_full_n <= ap_const_logic_1;
    DMAWriteMM_U0_start_write <= ap_const_logic_0;
    FillLocalBuffer7_U0_ap_continue <= stream_elt_dma_buffer_V_i_full_n;
    FillLocalBuffer7_U0_ap_start <= start_for_FillLocalBuffer7_U0_empty_n;
    FillLocalBuffer7_U0_start_full_n <= ap_const_logic_1;
    FillLocalBuffer7_U0_start_write <= ap_const_logic_0;
    FillLocalBuffer7_U0_stream_elt_dma_buffer_V_full_n <= stream_elt_dma_buffer_V_i_full_n;
    S2M_FormatLocalBuffer_U0_ap_continue <= axi_elt_dma_buffer_V_i_full_n;
    S2M_FormatLocalBuffer_U0_ap_start <= stream_elt_dma_buffer_V_t_empty_n;
    S2M_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_full_n <= axi_elt_dma_buffer_V_i_full_n;
    S2M_FormatLocalBuffer_U0_start_full_n <= ap_const_logic_1;
    S2M_FormatLocalBuffer_U0_start_write <= ap_const_logic_0;
    STR_video_in_TREADY <= FillLocalBuffer7_U0_STR_video_in_TREADY;
    ap_channel_done_axi_elt_dma_buffer_V <= S2M_FormatLocalBuffer_U0_ap_done;
    ap_channel_done_stream_elt_dma_buffer_V <= FillLocalBuffer7_U0_ap_done;
    ap_done <= DMAWriteMM_U0_ap_done;
    ap_idle <= ((axi_elt_dma_buffer_V_t_empty_n xor ap_const_logic_1) and (stream_elt_dma_buffer_V_t_empty_n xor ap_const_logic_1) and dataflow_in_loop_S2M_entry4_U0_ap_idle and S2M_FormatLocalBuffer_U0_ap_idle and FillLocalBuffer7_U0_ap_idle and DMAWriteMM_U0_ap_idle);
    ap_ready <= dataflow_in_loop_S2M_entry4_U0_ap_ready;
    ap_sync_continue <= ap_continue;
    ap_sync_done <= DMAWriteMM_U0_ap_done;
    ap_sync_ready <= dataflow_in_loop_S2M_entry4_U0_ap_ready;
    dataflow_in_loop_S2M_entry4_U0_ap_continue <= ap_const_logic_1;
    dataflow_in_loop_S2M_entry4_U0_ap_start <= ap_start;
    m_axi_MM_video_out_ARADDR <= ap_const_lv32_0;
    m_axi_MM_video_out_ARBURST <= ap_const_lv2_0;
    m_axi_MM_video_out_ARCACHE <= ap_const_lv4_0;
    m_axi_MM_video_out_ARID <= ap_const_lv1_0;
    m_axi_MM_video_out_ARLEN <= ap_const_lv32_0;
    m_axi_MM_video_out_ARLOCK <= ap_const_lv2_0;
    m_axi_MM_video_out_ARPROT <= ap_const_lv3_0;
    m_axi_MM_video_out_ARQOS <= ap_const_lv4_0;
    m_axi_MM_video_out_ARREGION <= ap_const_lv4_0;
    m_axi_MM_video_out_ARSIZE <= ap_const_lv3_0;
    m_axi_MM_video_out_ARUSER <= ap_const_lv1_0;
    m_axi_MM_video_out_ARVALID <= ap_const_logic_0;
    m_axi_MM_video_out_AWADDR <= DMAWriteMM_U0_m_axi_MM_video_out_AWADDR;
    m_axi_MM_video_out_AWBURST <= DMAWriteMM_U0_m_axi_MM_video_out_AWBURST;
    m_axi_MM_video_out_AWCACHE <= DMAWriteMM_U0_m_axi_MM_video_out_AWCACHE;
    m_axi_MM_video_out_AWID <= DMAWriteMM_U0_m_axi_MM_video_out_AWID;
    m_axi_MM_video_out_AWLEN <= DMAWriteMM_U0_m_axi_MM_video_out_AWLEN;
    m_axi_MM_video_out_AWLOCK <= DMAWriteMM_U0_m_axi_MM_video_out_AWLOCK;
    m_axi_MM_video_out_AWPROT <= DMAWriteMM_U0_m_axi_MM_video_out_AWPROT;
    m_axi_MM_video_out_AWQOS <= DMAWriteMM_U0_m_axi_MM_video_out_AWQOS;
    m_axi_MM_video_out_AWREGION <= DMAWriteMM_U0_m_axi_MM_video_out_AWREGION;
    m_axi_MM_video_out_AWSIZE <= DMAWriteMM_U0_m_axi_MM_video_out_AWSIZE;
    m_axi_MM_video_out_AWUSER <= DMAWriteMM_U0_m_axi_MM_video_out_AWUSER;
    m_axi_MM_video_out_AWVALID <= DMAWriteMM_U0_m_axi_MM_video_out_AWVALID;
    m_axi_MM_video_out_BREADY <= DMAWriteMM_U0_m_axi_MM_video_out_BREADY;
    m_axi_MM_video_out_RREADY <= ap_const_logic_0;
    m_axi_MM_video_out_WDATA <= DMAWriteMM_U0_m_axi_MM_video_out_WDATA;
    m_axi_MM_video_out_WID <= DMAWriteMM_U0_m_axi_MM_video_out_WID;
    m_axi_MM_video_out_WLAST <= DMAWriteMM_U0_m_axi_MM_video_out_WLAST;
    m_axi_MM_video_out_WSTRB <= DMAWriteMM_U0_m_axi_MM_video_out_WSTRB;
    m_axi_MM_video_out_WUSER <= DMAWriteMM_U0_m_axi_MM_video_out_WUSER;
    m_axi_MM_video_out_WVALID <= DMAWriteMM_U0_m_axi_MM_video_out_WVALID;
    start_for_FillLocalBuffer7_U0_din <= (0=>ap_const_logic_1, others=>'-');
    stream_elt_dma_buffer_V_t_d1 <= ap_const_lv8_0;
    stream_elt_dma_buffer_V_t_we1 <= ap_const_logic_0;
end behav;
