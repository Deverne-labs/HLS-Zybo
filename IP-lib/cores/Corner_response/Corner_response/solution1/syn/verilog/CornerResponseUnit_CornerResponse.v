// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CornerResponseUnit_CornerResponse (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_in_1_TDATA,
        stream_in_1_TVALID,
        stream_in_1_TREADY,
        stream_in_1_TKEEP,
        stream_in_1_TSTRB,
        stream_in_1_TUSER,
        stream_in_1_TLAST,
        stream_in_2_TDATA,
        stream_in_2_TVALID,
        stream_in_2_TREADY,
        stream_in_2_TKEEP,
        stream_in_2_TSTRB,
        stream_in_2_TUSER,
        stream_in_2_TLAST,
        stream_in_3_TDATA,
        stream_in_3_TVALID,
        stream_in_3_TREADY,
        stream_in_3_TKEEP,
        stream_in_3_TSTRB,
        stream_in_3_TUSER,
        stream_in_3_TLAST,
        stream_out_TDATA,
        stream_out_TVALID,
        stream_out_TREADY,
        stream_out_TKEEP,
        stream_out_TSTRB,
        stream_out_TUSER,
        stream_out_TLAST,
        image_w,
        image_h
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state82 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] stream_in_1_TDATA;
input   stream_in_1_TVALID;
output   stream_in_1_TREADY;
input  [1:0] stream_in_1_TKEEP;
input  [1:0] stream_in_1_TSTRB;
input  [0:0] stream_in_1_TUSER;
input  [0:0] stream_in_1_TLAST;
input  [15:0] stream_in_2_TDATA;
input   stream_in_2_TVALID;
output   stream_in_2_TREADY;
input  [1:0] stream_in_2_TKEEP;
input  [1:0] stream_in_2_TSTRB;
input  [0:0] stream_in_2_TUSER;
input  [0:0] stream_in_2_TLAST;
input  [15:0] stream_in_3_TDATA;
input   stream_in_3_TVALID;
output   stream_in_3_TREADY;
input  [1:0] stream_in_3_TKEEP;
input  [1:0] stream_in_3_TSTRB;
input  [0:0] stream_in_3_TUSER;
input  [0:0] stream_in_3_TLAST;
output  [15:0] stream_out_TDATA;
output   stream_out_TVALID;
input   stream_out_TREADY;
output  [1:0] stream_out_TKEEP;
output  [1:0] stream_out_TSTRB;
output  [0:0] stream_out_TUSER;
output  [0:0] stream_out_TLAST;
input  [31:0] image_w;
input  [31:0] image_h;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_in_1_TREADY;
reg stream_in_2_TREADY;
reg stream_in_3_TREADY;
reg stream_out_TVALID;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    stream_in_1_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln71_fu_276_p2;
reg    stream_in_2_TDATA_blk_n;
reg    stream_in_3_TDATA_blk_n;
reg    stream_out_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter78;
reg   [0:0] icmp_ln71_reg_668;
reg   [0:0] icmp_ln71_reg_668_pp0_iter77_reg;
reg   [63:0] indvar_flatten_reg_203;
reg   [30:0] line_reg_214;
reg   [30:0] column_reg_225;
wire   [31:0] sub_fu_265_p2;
wire    ap_CS_fsm_state2;
wire   [63:0] grp_fu_259_p2;
wire   [63:0] add_ln71_fu_270_p2;
reg    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
wire    ap_block_state26_pp0_stage0_iter23;
wire    ap_block_state27_pp0_stage0_iter24;
wire    ap_block_state28_pp0_stage0_iter25;
wire    ap_block_state29_pp0_stage0_iter26;
wire    ap_block_state30_pp0_stage0_iter27;
wire    ap_block_state31_pp0_stage0_iter28;
wire    ap_block_state32_pp0_stage0_iter29;
wire    ap_block_state33_pp0_stage0_iter30;
wire    ap_block_state34_pp0_stage0_iter31;
wire    ap_block_state35_pp0_stage0_iter32;
wire    ap_block_state36_pp0_stage0_iter33;
wire    ap_block_state37_pp0_stage0_iter34;
wire    ap_block_state38_pp0_stage0_iter35;
wire    ap_block_state39_pp0_stage0_iter36;
wire    ap_block_state40_pp0_stage0_iter37;
wire    ap_block_state41_pp0_stage0_iter38;
wire    ap_block_state42_pp0_stage0_iter39;
wire    ap_block_state43_pp0_stage0_iter40;
wire    ap_block_state44_pp0_stage0_iter41;
wire    ap_block_state45_pp0_stage0_iter42;
wire    ap_block_state46_pp0_stage0_iter43;
wire    ap_block_state47_pp0_stage0_iter44;
wire    ap_block_state48_pp0_stage0_iter45;
wire    ap_block_state49_pp0_stage0_iter46;
wire    ap_block_state50_pp0_stage0_iter47;
wire    ap_block_state51_pp0_stage0_iter48;
wire    ap_block_state52_pp0_stage0_iter49;
wire    ap_block_state53_pp0_stage0_iter50;
wire    ap_block_state54_pp0_stage0_iter51;
wire    ap_block_state55_pp0_stage0_iter52;
wire    ap_block_state56_pp0_stage0_iter53;
wire    ap_block_state57_pp0_stage0_iter54;
wire    ap_block_state58_pp0_stage0_iter55;
wire    ap_block_state59_pp0_stage0_iter56;
wire    ap_block_state60_pp0_stage0_iter57;
wire    ap_block_state61_pp0_stage0_iter58;
wire    ap_block_state62_pp0_stage0_iter59;
wire    ap_block_state63_pp0_stage0_iter60;
wire    ap_block_state64_pp0_stage0_iter61;
wire    ap_block_state65_pp0_stage0_iter62;
wire    ap_block_state66_pp0_stage0_iter63;
wire    ap_block_state67_pp0_stage0_iter64;
wire    ap_block_state68_pp0_stage0_iter65;
wire    ap_block_state69_pp0_stage0_iter66;
wire    ap_block_state70_pp0_stage0_iter67;
wire    ap_block_state71_pp0_stage0_iter68;
wire    ap_block_state72_pp0_stage0_iter69;
wire    ap_block_state73_pp0_stage0_iter70;
wire    ap_block_state74_pp0_stage0_iter71;
wire    ap_block_state75_pp0_stage0_iter72;
wire    ap_block_state76_pp0_stage0_iter73;
wire    ap_block_state77_pp0_stage0_iter74;
wire    ap_block_state78_pp0_stage0_iter75;
wire    ap_block_state79_pp0_stage0_iter76;
wire    ap_block_state80_pp0_stage0_iter77;
reg    ap_block_state81_pp0_stage0_iter78;
reg    ap_block_state81_io;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln71_reg_668_pp0_iter1_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter2_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter3_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter4_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter5_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter6_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter7_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter8_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter9_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter10_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter11_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter12_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter13_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter14_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter15_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter16_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter17_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter18_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter19_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter20_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter21_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter22_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter23_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter24_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter25_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter26_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter27_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter28_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter29_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter30_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter31_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter32_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter33_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter34_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter35_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter36_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter37_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter38_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter39_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter40_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter41_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter42_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter43_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter44_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter45_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter46_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter47_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter48_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter49_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter50_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter51_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter52_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter53_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter54_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter55_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter56_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter57_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter58_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter59_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter60_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter61_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter62_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter63_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter64_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter65_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter66_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter67_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter68_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter69_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter70_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter71_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter72_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter73_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter74_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter75_reg;
reg   [0:0] icmp_ln71_reg_668_pp0_iter76_reg;
reg   [15:0] in_element_int_1_data_V_reg_672;
reg   [15:0] in_element_int_2_data_V_reg_677;
wire   [29:0] zext_ln87_fu_293_p1;
wire  signed [31:0] sext_ln1345_fu_309_p1;
wire   [16:0] ret_2_fu_313_p2;
reg   [16:0] ret_2_reg_694;
reg   [16:0] ret_2_reg_694_pp0_iter2_reg;
reg   [16:0] ret_2_reg_694_pp0_iter3_reg;
reg   [16:0] ret_2_reg_694_pp0_iter4_reg;
reg   [16:0] ret_2_reg_694_pp0_iter5_reg;
reg   [16:0] ret_2_reg_694_pp0_iter6_reg;
reg   [16:0] ret_2_reg_694_pp0_iter7_reg;
reg   [16:0] ret_2_reg_694_pp0_iter8_reg;
reg   [16:0] ret_2_reg_694_pp0_iter9_reg;
reg   [16:0] ret_2_reg_694_pp0_iter10_reg;
reg   [16:0] ret_2_reg_694_pp0_iter11_reg;
reg   [16:0] ret_2_reg_694_pp0_iter12_reg;
reg   [16:0] ret_2_reg_694_pp0_iter13_reg;
reg   [16:0] ret_2_reg_694_pp0_iter14_reg;
reg   [16:0] ret_2_reg_694_pp0_iter15_reg;
reg   [16:0] ret_2_reg_694_pp0_iter16_reg;
reg   [16:0] ret_2_reg_694_pp0_iter17_reg;
reg   [16:0] ret_2_reg_694_pp0_iter18_reg;
reg   [16:0] ret_2_reg_694_pp0_iter19_reg;
reg   [16:0] ret_2_reg_694_pp0_iter20_reg;
reg   [16:0] ret_2_reg_694_pp0_iter21_reg;
reg   [16:0] ret_2_reg_694_pp0_iter22_reg;
reg   [16:0] ret_2_reg_694_pp0_iter23_reg;
reg   [16:0] ret_2_reg_694_pp0_iter24_reg;
reg   [16:0] ret_2_reg_694_pp0_iter25_reg;
reg   [16:0] ret_2_reg_694_pp0_iter26_reg;
reg   [16:0] ret_2_reg_694_pp0_iter27_reg;
reg   [16:0] ret_2_reg_694_pp0_iter28_reg;
reg   [16:0] ret_2_reg_694_pp0_iter29_reg;
reg   [16:0] ret_2_reg_694_pp0_iter30_reg;
reg   [16:0] ret_2_reg_694_pp0_iter31_reg;
reg   [16:0] ret_2_reg_694_pp0_iter32_reg;
reg   [16:0] ret_2_reg_694_pp0_iter33_reg;
reg   [16:0] ret_2_reg_694_pp0_iter34_reg;
reg   [16:0] ret_2_reg_694_pp0_iter35_reg;
reg   [16:0] ret_2_reg_694_pp0_iter36_reg;
reg   [16:0] ret_2_reg_694_pp0_iter37_reg;
reg   [16:0] ret_2_reg_694_pp0_iter38_reg;
reg   [16:0] ret_2_reg_694_pp0_iter39_reg;
reg   [16:0] ret_2_reg_694_pp0_iter40_reg;
reg   [16:0] ret_2_reg_694_pp0_iter41_reg;
reg   [16:0] ret_2_reg_694_pp0_iter42_reg;
reg   [16:0] ret_2_reg_694_pp0_iter43_reg;
reg   [16:0] ret_2_reg_694_pp0_iter44_reg;
reg   [16:0] ret_2_reg_694_pp0_iter45_reg;
reg   [16:0] ret_2_reg_694_pp0_iter46_reg;
reg   [16:0] ret_2_reg_694_pp0_iter47_reg;
reg   [16:0] ret_2_reg_694_pp0_iter48_reg;
reg   [16:0] ret_2_reg_694_pp0_iter49_reg;
reg   [16:0] ret_2_reg_694_pp0_iter50_reg;
reg   [16:0] ret_2_reg_694_pp0_iter51_reg;
reg   [16:0] ret_2_reg_694_pp0_iter52_reg;
reg   [16:0] ret_2_reg_694_pp0_iter53_reg;
reg   [16:0] ret_2_reg_694_pp0_iter54_reg;
reg   [16:0] ret_2_reg_694_pp0_iter55_reg;
reg   [16:0] ret_2_reg_694_pp0_iter56_reg;
reg   [16:0] ret_2_reg_694_pp0_iter57_reg;
reg   [16:0] ret_2_reg_694_pp0_iter58_reg;
reg   [16:0] ret_2_reg_694_pp0_iter59_reg;
reg   [16:0] ret_2_reg_694_pp0_iter60_reg;
reg   [16:0] ret_2_reg_694_pp0_iter61_reg;
wire  signed [31:0] grp_fu_629_p3;
reg  signed [31:0] add_ln87_reg_704;
reg    ap_enable_reg_pp0_iter4;
wire   [63:0] grp_fu_240_p1;
reg   [63:0] conv_reg_709;
wire   [63:0] grp_fu_246_p2;
reg   [63:0] i_op_assign_reg_719;
wire   [63:0] grp_fu_243_p1;
reg   [63:0] conv_i_reg_724;
wire   [63:0] grp_fu_236_p2;
reg   [63:0] val_reg_729;
wire   [63:0] reg_fu_330_p1;
reg   [63:0] reg_reg_734;
reg   [0:0] p_Result_s_reg_739;
reg   [0:0] p_Result_s_reg_739_pp0_iter76_reg;
reg   [0:0] p_Result_s_reg_739_pp0_iter77_reg;
wire   [31:0] trunc_ln328_fu_359_p1;
reg   [31:0] trunc_ln328_reg_744;
reg   [31:0] trunc_ln328_reg_744_pp0_iter76_reg;
wire   [0:0] icmp_ln323_fu_363_p2;
reg   [0:0] icmp_ln323_reg_750;
wire  signed [11:0] sh_amt_fu_369_p2;
reg  signed [11:0] sh_amt_reg_757;
wire   [0:0] icmp_ln327_fu_375_p2;
reg   [0:0] icmp_ln327_reg_763;
wire   [0:0] icmp_ln329_fu_381_p2;
reg   [0:0] icmp_ln329_reg_769;
reg   [0:0] icmp_ln329_reg_769_pp0_iter76_reg;
wire   [0:0] icmp_ln330_fu_387_p2;
reg   [0:0] icmp_ln330_reg_775;
wire  signed [11:0] sh_amt_1_fu_408_p2;
reg  signed [11:0] sh_amt_1_reg_780;
wire   [0:0] icmp_ln337_fu_423_p2;
reg   [0:0] icmp_ln337_reg_785;
wire   [0:0] or_ln327_fu_446_p2;
reg   [0:0] or_ln327_reg_790;
wire   [31:0] select_ln327_fu_491_p3;
reg   [31:0] select_ln327_reg_795;
wire   [31:0] select_ln329_fu_517_p3;
reg   [31:0] select_ln329_reg_800;
wire   [30:0] select_ln71_1_fu_551_p3;
wire   [30:0] column_1_fu_616_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_enable_reg_pp0_iter69;
reg    ap_enable_reg_pp0_iter70;
reg    ap_enable_reg_pp0_iter71;
reg    ap_enable_reg_pp0_iter72;
reg    ap_enable_reg_pp0_iter73;
reg    ap_enable_reg_pp0_iter74;
reg    ap_enable_reg_pp0_iter75;
reg    ap_enable_reg_pp0_iter76;
reg    ap_enable_reg_pp0_iter77;
reg    ap_block_pp0_stage0_01001;
wire   [63:0] grp_fu_243_p0;
wire   [31:0] grp_fu_259_p0;
wire   [31:0] grp_fu_259_p1;
wire   [16:0] zext_ln215_fu_297_p1;
wire   [16:0] zext_ln215_1_fu_300_p1;
wire   [16:0] ret_fu_303_p2;
wire   [29:0] grp_fu_622_p2;
wire   [10:0] exp_fu_345_p4;
wire   [62:0] trunc_ln306_fu_333_p1;
wire   [11:0] zext_ln311_fu_355_p1;
wire   [51:0] trunc_ln315_fu_393_p1;
wire   [52:0] p_Result_1_fu_396_p3;
wire   [6:0] tmp_fu_413_p4;
wire  signed [31:0] sext_ln331_fu_429_p1;
wire   [53:0] zext_ln320_fu_404_p1;
wire   [53:0] zext_ln331_fu_432_p1;
wire   [53:0] lshr_ln331_fu_436_p2;
wire   [0:0] xor_ln327_fu_450_p2;
wire   [0:0] and_ln330_fu_456_p2;
wire   [0:0] and_ln330_1_fu_461_p2;
wire   [31:0] trunc_ln331_fu_442_p1;
wire   [31:0] select_ln330_fu_466_p3;
wire   [0:0] xor_ln323_fu_481_p2;
wire   [0:0] and_ln327_fu_486_p2;
wire   [31:0] select_ln323_fu_474_p3;
wire  signed [31:0] sext_ln326_fu_498_p1;
wire   [31:0] shl_ln339_fu_501_p2;
wire   [0:0] or_ln329_fu_513_p2;
wire   [31:0] select_ln337_fu_506_p3;
wire   [31:0] zext_ln72_fu_524_p1;
wire   [0:0] icmp_ln72_fu_528_p2;
wire   [30:0] select_ln71_fu_533_p3;
wire   [30:0] add_ln71_1_fu_545_p2;
wire   [31:0] sub_ln455_fu_559_p2;
wire   [31:0] p_Val2_1_fu_564_p3;
wire   [0:0] tmp_1_fu_570_p3;
wire   [15:0] phitmp_fu_578_p4;
wire   [30:0] or_ln93_fu_597_p2;
wire   [31:0] zext_ln71_fu_541_p1;
wire   [15:0] grp_fu_622_p0;
wire   [15:0] grp_fu_622_p1;
wire  signed [16:0] grp_fu_629_p0;
wire  signed [16:0] grp_fu_629_p1;
wire   [31:0] grp_fu_629_p2;
reg    grp_fu_236_ce;
reg    grp_fu_240_ce;
reg    grp_fu_243_ce;
reg    grp_fu_246_ce;
reg    grp_fu_622_ce;
reg    grp_fu_629_ce;
wire    ap_CS_fsm_state82;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [63:0] grp_fu_259_p00;
wire   [63:0] grp_fu_259_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter78 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 ap_enable_reg_pp0_iter69 = 1'b0;
#0 ap_enable_reg_pp0_iter70 = 1'b0;
#0 ap_enable_reg_pp0_iter71 = 1'b0;
#0 ap_enable_reg_pp0_iter72 = 1'b0;
#0 ap_enable_reg_pp0_iter73 = 1'b0;
#0 ap_enable_reg_pp0_iter74 = 1'b0;
#0 ap_enable_reg_pp0_iter75 = 1'b0;
#0 ap_enable_reg_pp0_iter76 = 1'b0;
#0 ap_enable_reg_pp0_iter77 = 1'b0;
end

CornerResponseUnit_dsub_64ns_64ns_64_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_7_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_i_reg_724),
    .din1(i_op_assign_reg_719),
    .ce(grp_fu_236_ce),
    .dout(grp_fu_236_p2)
);

CornerResponseUnit_uitodp_32s_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
uitodp_32s_64_6_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln87_reg_704),
    .ce(grp_fu_240_ce),
    .dout(grp_fu_240_p1)
);

CornerResponseUnit_sitodp_64ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64ns_64_6_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_243_p0),
    .ce(grp_fu_243_ce),
    .dout(grp_fu_243_p1)
);

CornerResponseUnit_dsqrt_64ns_64ns_64_57_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 57 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsqrt_64ns_64ns_64_57_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(conv_reg_709),
    .ce(grp_fu_246_ce),
    .dout(grp_fu_246_p2)
);

CornerResponseUnit_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_259_p0),
    .din1(grp_fu_259_p1),
    .ce(1'b1),
    .dout(grp_fu_259_p2)
);

CornerResponseUnit_mul_mul_16ns_16ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_16ns_30_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_622_p0),
    .din1(grp_fu_622_p1),
    .ce(grp_fu_622_ce),
    .dout(grp_fu_622_p2)
);

CornerResponseUnit_mac_muladd_17s_17s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 17 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_17s_17s_32ns_32_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_629_p0),
    .din1(grp_fu_629_p1),
    .din2(grp_fu_629_p2),
    .ce(grp_fu_629_ce),
    .dout(grp_fu_629_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter69 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter70 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter71 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter71 <= ap_enable_reg_pp0_iter70;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter72 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter72 <= ap_enable_reg_pp0_iter71;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter73 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter73 <= ap_enable_reg_pp0_iter72;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter74 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter74 <= ap_enable_reg_pp0_iter73;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter75 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter75 <= ap_enable_reg_pp0_iter74;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter76 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter76 <= ap_enable_reg_pp0_iter75;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter77 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter77 <= ap_enable_reg_pp0_iter76;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter78 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter78 <= ap_enable_reg_pp0_iter77;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter78 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_reg_668_pp0_iter77_reg == 1'd0) & (ap_enable_reg_pp0_iter78 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        column_reg_225 <= column_1_fu_616_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        column_reg_225 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_fu_276_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_203 <= add_ln71_fu_270_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_203 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_reg_668_pp0_iter77_reg == 1'd0) & (ap_enable_reg_pp0_iter78 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_reg_214 <= select_ln71_1_fu_551_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        line_reg_214 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln71_reg_668_pp0_iter3_reg == 1'd0))) begin
        add_ln87_reg_704 <= grp_fu_629_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln71_reg_668_pp0_iter66_reg == 1'd0))) begin
        conv_i_reg_724 <= grp_fu_243_p1;
        i_op_assign_reg_719 <= grp_fu_246_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln71_reg_668_pp0_iter9_reg == 1'd0))) begin
        conv_reg_709 <= grp_fu_240_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln71_reg_668_pp0_iter74_reg == 1'd0))) begin
        icmp_ln323_reg_750 <= icmp_ln323_fu_363_p2;
        icmp_ln327_reg_763 <= icmp_ln327_fu_375_p2;
        icmp_ln329_reg_769 <= icmp_ln329_fu_381_p2;
        icmp_ln330_reg_775 <= icmp_ln330_fu_387_p2;
        p_Result_s_reg_739 <= reg_fu_330_p1[32'd63];
        reg_reg_734 <= reg_fu_330_p1;
        sh_amt_reg_757 <= sh_amt_fu_369_p2;
        trunc_ln328_reg_744 <= trunc_ln328_fu_359_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln329_reg_769_pp0_iter76_reg <= icmp_ln329_reg_769;
        icmp_ln71_reg_668_pp0_iter10_reg <= icmp_ln71_reg_668_pp0_iter9_reg;
        icmp_ln71_reg_668_pp0_iter11_reg <= icmp_ln71_reg_668_pp0_iter10_reg;
        icmp_ln71_reg_668_pp0_iter12_reg <= icmp_ln71_reg_668_pp0_iter11_reg;
        icmp_ln71_reg_668_pp0_iter13_reg <= icmp_ln71_reg_668_pp0_iter12_reg;
        icmp_ln71_reg_668_pp0_iter14_reg <= icmp_ln71_reg_668_pp0_iter13_reg;
        icmp_ln71_reg_668_pp0_iter15_reg <= icmp_ln71_reg_668_pp0_iter14_reg;
        icmp_ln71_reg_668_pp0_iter16_reg <= icmp_ln71_reg_668_pp0_iter15_reg;
        icmp_ln71_reg_668_pp0_iter17_reg <= icmp_ln71_reg_668_pp0_iter16_reg;
        icmp_ln71_reg_668_pp0_iter18_reg <= icmp_ln71_reg_668_pp0_iter17_reg;
        icmp_ln71_reg_668_pp0_iter19_reg <= icmp_ln71_reg_668_pp0_iter18_reg;
        icmp_ln71_reg_668_pp0_iter20_reg <= icmp_ln71_reg_668_pp0_iter19_reg;
        icmp_ln71_reg_668_pp0_iter21_reg <= icmp_ln71_reg_668_pp0_iter20_reg;
        icmp_ln71_reg_668_pp0_iter22_reg <= icmp_ln71_reg_668_pp0_iter21_reg;
        icmp_ln71_reg_668_pp0_iter23_reg <= icmp_ln71_reg_668_pp0_iter22_reg;
        icmp_ln71_reg_668_pp0_iter24_reg <= icmp_ln71_reg_668_pp0_iter23_reg;
        icmp_ln71_reg_668_pp0_iter25_reg <= icmp_ln71_reg_668_pp0_iter24_reg;
        icmp_ln71_reg_668_pp0_iter26_reg <= icmp_ln71_reg_668_pp0_iter25_reg;
        icmp_ln71_reg_668_pp0_iter27_reg <= icmp_ln71_reg_668_pp0_iter26_reg;
        icmp_ln71_reg_668_pp0_iter28_reg <= icmp_ln71_reg_668_pp0_iter27_reg;
        icmp_ln71_reg_668_pp0_iter29_reg <= icmp_ln71_reg_668_pp0_iter28_reg;
        icmp_ln71_reg_668_pp0_iter2_reg <= icmp_ln71_reg_668_pp0_iter1_reg;
        icmp_ln71_reg_668_pp0_iter30_reg <= icmp_ln71_reg_668_pp0_iter29_reg;
        icmp_ln71_reg_668_pp0_iter31_reg <= icmp_ln71_reg_668_pp0_iter30_reg;
        icmp_ln71_reg_668_pp0_iter32_reg <= icmp_ln71_reg_668_pp0_iter31_reg;
        icmp_ln71_reg_668_pp0_iter33_reg <= icmp_ln71_reg_668_pp0_iter32_reg;
        icmp_ln71_reg_668_pp0_iter34_reg <= icmp_ln71_reg_668_pp0_iter33_reg;
        icmp_ln71_reg_668_pp0_iter35_reg <= icmp_ln71_reg_668_pp0_iter34_reg;
        icmp_ln71_reg_668_pp0_iter36_reg <= icmp_ln71_reg_668_pp0_iter35_reg;
        icmp_ln71_reg_668_pp0_iter37_reg <= icmp_ln71_reg_668_pp0_iter36_reg;
        icmp_ln71_reg_668_pp0_iter38_reg <= icmp_ln71_reg_668_pp0_iter37_reg;
        icmp_ln71_reg_668_pp0_iter39_reg <= icmp_ln71_reg_668_pp0_iter38_reg;
        icmp_ln71_reg_668_pp0_iter3_reg <= icmp_ln71_reg_668_pp0_iter2_reg;
        icmp_ln71_reg_668_pp0_iter40_reg <= icmp_ln71_reg_668_pp0_iter39_reg;
        icmp_ln71_reg_668_pp0_iter41_reg <= icmp_ln71_reg_668_pp0_iter40_reg;
        icmp_ln71_reg_668_pp0_iter42_reg <= icmp_ln71_reg_668_pp0_iter41_reg;
        icmp_ln71_reg_668_pp0_iter43_reg <= icmp_ln71_reg_668_pp0_iter42_reg;
        icmp_ln71_reg_668_pp0_iter44_reg <= icmp_ln71_reg_668_pp0_iter43_reg;
        icmp_ln71_reg_668_pp0_iter45_reg <= icmp_ln71_reg_668_pp0_iter44_reg;
        icmp_ln71_reg_668_pp0_iter46_reg <= icmp_ln71_reg_668_pp0_iter45_reg;
        icmp_ln71_reg_668_pp0_iter47_reg <= icmp_ln71_reg_668_pp0_iter46_reg;
        icmp_ln71_reg_668_pp0_iter48_reg <= icmp_ln71_reg_668_pp0_iter47_reg;
        icmp_ln71_reg_668_pp0_iter49_reg <= icmp_ln71_reg_668_pp0_iter48_reg;
        icmp_ln71_reg_668_pp0_iter4_reg <= icmp_ln71_reg_668_pp0_iter3_reg;
        icmp_ln71_reg_668_pp0_iter50_reg <= icmp_ln71_reg_668_pp0_iter49_reg;
        icmp_ln71_reg_668_pp0_iter51_reg <= icmp_ln71_reg_668_pp0_iter50_reg;
        icmp_ln71_reg_668_pp0_iter52_reg <= icmp_ln71_reg_668_pp0_iter51_reg;
        icmp_ln71_reg_668_pp0_iter53_reg <= icmp_ln71_reg_668_pp0_iter52_reg;
        icmp_ln71_reg_668_pp0_iter54_reg <= icmp_ln71_reg_668_pp0_iter53_reg;
        icmp_ln71_reg_668_pp0_iter55_reg <= icmp_ln71_reg_668_pp0_iter54_reg;
        icmp_ln71_reg_668_pp0_iter56_reg <= icmp_ln71_reg_668_pp0_iter55_reg;
        icmp_ln71_reg_668_pp0_iter57_reg <= icmp_ln71_reg_668_pp0_iter56_reg;
        icmp_ln71_reg_668_pp0_iter58_reg <= icmp_ln71_reg_668_pp0_iter57_reg;
        icmp_ln71_reg_668_pp0_iter59_reg <= icmp_ln71_reg_668_pp0_iter58_reg;
        icmp_ln71_reg_668_pp0_iter5_reg <= icmp_ln71_reg_668_pp0_iter4_reg;
        icmp_ln71_reg_668_pp0_iter60_reg <= icmp_ln71_reg_668_pp0_iter59_reg;
        icmp_ln71_reg_668_pp0_iter61_reg <= icmp_ln71_reg_668_pp0_iter60_reg;
        icmp_ln71_reg_668_pp0_iter62_reg <= icmp_ln71_reg_668_pp0_iter61_reg;
        icmp_ln71_reg_668_pp0_iter63_reg <= icmp_ln71_reg_668_pp0_iter62_reg;
        icmp_ln71_reg_668_pp0_iter64_reg <= icmp_ln71_reg_668_pp0_iter63_reg;
        icmp_ln71_reg_668_pp0_iter65_reg <= icmp_ln71_reg_668_pp0_iter64_reg;
        icmp_ln71_reg_668_pp0_iter66_reg <= icmp_ln71_reg_668_pp0_iter65_reg;
        icmp_ln71_reg_668_pp0_iter67_reg <= icmp_ln71_reg_668_pp0_iter66_reg;
        icmp_ln71_reg_668_pp0_iter68_reg <= icmp_ln71_reg_668_pp0_iter67_reg;
        icmp_ln71_reg_668_pp0_iter69_reg <= icmp_ln71_reg_668_pp0_iter68_reg;
        icmp_ln71_reg_668_pp0_iter6_reg <= icmp_ln71_reg_668_pp0_iter5_reg;
        icmp_ln71_reg_668_pp0_iter70_reg <= icmp_ln71_reg_668_pp0_iter69_reg;
        icmp_ln71_reg_668_pp0_iter71_reg <= icmp_ln71_reg_668_pp0_iter70_reg;
        icmp_ln71_reg_668_pp0_iter72_reg <= icmp_ln71_reg_668_pp0_iter71_reg;
        icmp_ln71_reg_668_pp0_iter73_reg <= icmp_ln71_reg_668_pp0_iter72_reg;
        icmp_ln71_reg_668_pp0_iter74_reg <= icmp_ln71_reg_668_pp0_iter73_reg;
        icmp_ln71_reg_668_pp0_iter75_reg <= icmp_ln71_reg_668_pp0_iter74_reg;
        icmp_ln71_reg_668_pp0_iter76_reg <= icmp_ln71_reg_668_pp0_iter75_reg;
        icmp_ln71_reg_668_pp0_iter77_reg <= icmp_ln71_reg_668_pp0_iter76_reg;
        icmp_ln71_reg_668_pp0_iter7_reg <= icmp_ln71_reg_668_pp0_iter6_reg;
        icmp_ln71_reg_668_pp0_iter8_reg <= icmp_ln71_reg_668_pp0_iter7_reg;
        icmp_ln71_reg_668_pp0_iter9_reg <= icmp_ln71_reg_668_pp0_iter8_reg;
        p_Result_s_reg_739_pp0_iter76_reg <= p_Result_s_reg_739;
        p_Result_s_reg_739_pp0_iter77_reg <= p_Result_s_reg_739_pp0_iter76_reg;
        ret_2_reg_694_pp0_iter10_reg <= ret_2_reg_694_pp0_iter9_reg;
        ret_2_reg_694_pp0_iter11_reg <= ret_2_reg_694_pp0_iter10_reg;
        ret_2_reg_694_pp0_iter12_reg <= ret_2_reg_694_pp0_iter11_reg;
        ret_2_reg_694_pp0_iter13_reg <= ret_2_reg_694_pp0_iter12_reg;
        ret_2_reg_694_pp0_iter14_reg <= ret_2_reg_694_pp0_iter13_reg;
        ret_2_reg_694_pp0_iter15_reg <= ret_2_reg_694_pp0_iter14_reg;
        ret_2_reg_694_pp0_iter16_reg <= ret_2_reg_694_pp0_iter15_reg;
        ret_2_reg_694_pp0_iter17_reg <= ret_2_reg_694_pp0_iter16_reg;
        ret_2_reg_694_pp0_iter18_reg <= ret_2_reg_694_pp0_iter17_reg;
        ret_2_reg_694_pp0_iter19_reg <= ret_2_reg_694_pp0_iter18_reg;
        ret_2_reg_694_pp0_iter20_reg <= ret_2_reg_694_pp0_iter19_reg;
        ret_2_reg_694_pp0_iter21_reg <= ret_2_reg_694_pp0_iter20_reg;
        ret_2_reg_694_pp0_iter22_reg <= ret_2_reg_694_pp0_iter21_reg;
        ret_2_reg_694_pp0_iter23_reg <= ret_2_reg_694_pp0_iter22_reg;
        ret_2_reg_694_pp0_iter24_reg <= ret_2_reg_694_pp0_iter23_reg;
        ret_2_reg_694_pp0_iter25_reg <= ret_2_reg_694_pp0_iter24_reg;
        ret_2_reg_694_pp0_iter26_reg <= ret_2_reg_694_pp0_iter25_reg;
        ret_2_reg_694_pp0_iter27_reg <= ret_2_reg_694_pp0_iter26_reg;
        ret_2_reg_694_pp0_iter28_reg <= ret_2_reg_694_pp0_iter27_reg;
        ret_2_reg_694_pp0_iter29_reg <= ret_2_reg_694_pp0_iter28_reg;
        ret_2_reg_694_pp0_iter2_reg <= ret_2_reg_694;
        ret_2_reg_694_pp0_iter30_reg <= ret_2_reg_694_pp0_iter29_reg;
        ret_2_reg_694_pp0_iter31_reg <= ret_2_reg_694_pp0_iter30_reg;
        ret_2_reg_694_pp0_iter32_reg <= ret_2_reg_694_pp0_iter31_reg;
        ret_2_reg_694_pp0_iter33_reg <= ret_2_reg_694_pp0_iter32_reg;
        ret_2_reg_694_pp0_iter34_reg <= ret_2_reg_694_pp0_iter33_reg;
        ret_2_reg_694_pp0_iter35_reg <= ret_2_reg_694_pp0_iter34_reg;
        ret_2_reg_694_pp0_iter36_reg <= ret_2_reg_694_pp0_iter35_reg;
        ret_2_reg_694_pp0_iter37_reg <= ret_2_reg_694_pp0_iter36_reg;
        ret_2_reg_694_pp0_iter38_reg <= ret_2_reg_694_pp0_iter37_reg;
        ret_2_reg_694_pp0_iter39_reg <= ret_2_reg_694_pp0_iter38_reg;
        ret_2_reg_694_pp0_iter3_reg <= ret_2_reg_694_pp0_iter2_reg;
        ret_2_reg_694_pp0_iter40_reg <= ret_2_reg_694_pp0_iter39_reg;
        ret_2_reg_694_pp0_iter41_reg <= ret_2_reg_694_pp0_iter40_reg;
        ret_2_reg_694_pp0_iter42_reg <= ret_2_reg_694_pp0_iter41_reg;
        ret_2_reg_694_pp0_iter43_reg <= ret_2_reg_694_pp0_iter42_reg;
        ret_2_reg_694_pp0_iter44_reg <= ret_2_reg_694_pp0_iter43_reg;
        ret_2_reg_694_pp0_iter45_reg <= ret_2_reg_694_pp0_iter44_reg;
        ret_2_reg_694_pp0_iter46_reg <= ret_2_reg_694_pp0_iter45_reg;
        ret_2_reg_694_pp0_iter47_reg <= ret_2_reg_694_pp0_iter46_reg;
        ret_2_reg_694_pp0_iter48_reg <= ret_2_reg_694_pp0_iter47_reg;
        ret_2_reg_694_pp0_iter49_reg <= ret_2_reg_694_pp0_iter48_reg;
        ret_2_reg_694_pp0_iter4_reg <= ret_2_reg_694_pp0_iter3_reg;
        ret_2_reg_694_pp0_iter50_reg <= ret_2_reg_694_pp0_iter49_reg;
        ret_2_reg_694_pp0_iter51_reg <= ret_2_reg_694_pp0_iter50_reg;
        ret_2_reg_694_pp0_iter52_reg <= ret_2_reg_694_pp0_iter51_reg;
        ret_2_reg_694_pp0_iter53_reg <= ret_2_reg_694_pp0_iter52_reg;
        ret_2_reg_694_pp0_iter54_reg <= ret_2_reg_694_pp0_iter53_reg;
        ret_2_reg_694_pp0_iter55_reg <= ret_2_reg_694_pp0_iter54_reg;
        ret_2_reg_694_pp0_iter56_reg <= ret_2_reg_694_pp0_iter55_reg;
        ret_2_reg_694_pp0_iter57_reg <= ret_2_reg_694_pp0_iter56_reg;
        ret_2_reg_694_pp0_iter58_reg <= ret_2_reg_694_pp0_iter57_reg;
        ret_2_reg_694_pp0_iter59_reg <= ret_2_reg_694_pp0_iter58_reg;
        ret_2_reg_694_pp0_iter5_reg <= ret_2_reg_694_pp0_iter4_reg;
        ret_2_reg_694_pp0_iter60_reg <= ret_2_reg_694_pp0_iter59_reg;
        ret_2_reg_694_pp0_iter61_reg <= ret_2_reg_694_pp0_iter60_reg;
        ret_2_reg_694_pp0_iter6_reg <= ret_2_reg_694_pp0_iter5_reg;
        ret_2_reg_694_pp0_iter7_reg <= ret_2_reg_694_pp0_iter6_reg;
        ret_2_reg_694_pp0_iter8_reg <= ret_2_reg_694_pp0_iter7_reg;
        ret_2_reg_694_pp0_iter9_reg <= ret_2_reg_694_pp0_iter8_reg;
        trunc_ln328_reg_744_pp0_iter76_reg <= trunc_ln328_reg_744;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln71_reg_668_pp0_iter75_reg == 1'd0))) begin
        icmp_ln337_reg_785 <= icmp_ln337_fu_423_p2;
        or_ln327_reg_790 <= or_ln327_fu_446_p2;
        select_ln327_reg_795 <= select_ln327_fu_491_p3;
        sh_amt_1_reg_780 <= sh_amt_1_fu_408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln71_reg_668 <= icmp_ln71_fu_276_p2;
        icmp_ln71_reg_668_pp0_iter1_reg <= icmp_ln71_reg_668;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_fu_276_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_element_int_1_data_V_reg_672 <= stream_in_1_TDATA;
        in_element_int_2_data_V_reg_677 <= stream_in_2_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_reg_668 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ret_2_reg_694 <= ret_2_fu_313_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln71_reg_668_pp0_iter76_reg == 1'd0))) begin
        select_ln329_reg_800 <= select_ln329_fu_517_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln71_reg_668_pp0_iter73_reg == 1'd0))) begin
        val_reg_729 <= grp_fu_236_p2;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_276_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter78 == 1'b0) & (ap_enable_reg_pp0_iter77 == 1'b0) & (ap_enable_reg_pp0_iter76 == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b0) & (ap_enable_reg_pp0_iter74 == 1'b0) & (ap_enable_reg_pp0_iter73 == 1'b0) & (ap_enable_reg_pp0_iter72 == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b0) & (ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_236_ce = 1'b1;
    end else begin
        grp_fu_236_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_240_ce = 1'b1;
    end else begin
        grp_fu_240_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_243_ce = 1'b1;
    end else begin
        grp_fu_243_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_246_ce = 1'b1;
    end else begin
        grp_fu_246_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_622_ce = 1'b1;
    end else begin
        grp_fu_622_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_629_ce = 1'b1;
    end else begin
        grp_fu_629_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_276_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_1_TDATA_blk_n = stream_in_1_TVALID;
    end else begin
        stream_in_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_276_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_1_TREADY = 1'b1;
    end else begin
        stream_in_1_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_276_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_2_TDATA_blk_n = stream_in_2_TVALID;
    end else begin
        stream_in_2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_276_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_2_TREADY = 1'b1;
    end else begin
        stream_in_2_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_276_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_3_TDATA_blk_n = stream_in_3_TVALID;
    end else begin
        stream_in_3_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_276_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_3_TREADY = 1'b1;
    end else begin
        stream_in_3_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_reg_668_pp0_iter77_reg == 1'd0) & (ap_enable_reg_pp0_iter78 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        stream_out_TDATA_blk_n = stream_out_TREADY;
    end else begin
        stream_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln71_reg_668_pp0_iter77_reg == 1'd0) & (ap_enable_reg_pp0_iter78 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        stream_out_TVALID = 1'b1;
    end else begin
        stream_out_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter78 == 1'b1) & (ap_enable_reg_pp0_iter77 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter78 == 1'b1) & (ap_enable_reg_pp0_iter77 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln71_1_fu_545_p2 = (line_reg_214 + 31'd1);

assign add_ln71_fu_270_p2 = (indvar_flatten_reg_203 + 64'd1);

assign and_ln327_fu_486_p2 = (xor_ln323_fu_481_p2 & icmp_ln327_reg_763);

assign and_ln330_1_fu_461_p2 = (icmp_ln329_reg_769 & and_ln330_fu_456_p2);

assign and_ln330_fu_456_p2 = (xor_ln327_fu_450_p2 & icmp_ln330_reg_775);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln71_reg_668_pp0_iter77_reg == 1'd0) & (ap_enable_reg_pp0_iter78 == 1'b1) & (stream_out_TREADY == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln71_fu_276_p2 == 1'd0) & (stream_in_3_TVALID == 1'b0)) | ((icmp_ln71_fu_276_p2 == 1'd0) & (stream_in_2_TVALID == 1'b0)) | ((icmp_ln71_fu_276_p2 == 1'd0) & (stream_in_1_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter78 == 1'b1) & ((1'b1 == ap_block_state81_io) | ((icmp_ln71_reg_668_pp0_iter77_reg == 1'd0) & (stream_out_TREADY == 1'b0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln71_fu_276_p2 == 1'd0) & (stream_in_3_TVALID == 1'b0)) | ((icmp_ln71_fu_276_p2 == 1'd0) & (stream_in_2_TVALID == 1'b0)) | ((icmp_ln71_fu_276_p2 == 1'd0) & (stream_in_1_TVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter78 == 1'b1) & ((1'b1 == ap_block_state81_io) | ((icmp_ln71_reg_668_pp0_iter77_reg == 1'd0) & (stream_out_TREADY == 1'b0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln71_fu_276_p2 == 1'd0) & (stream_in_3_TVALID == 1'b0)) | ((icmp_ln71_fu_276_p2 == 1'd0) & (stream_in_2_TVALID == 1'b0)) | ((icmp_ln71_fu_276_p2 == 1'd0) & (stream_in_1_TVALID == 1'b0)))));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter0 = (((icmp_ln71_fu_276_p2 == 1'd0) & (stream_in_3_TVALID == 1'b0)) | ((icmp_ln71_fu_276_p2 == 1'd0) & (stream_in_2_TVALID == 1'b0)) | ((icmp_ln71_fu_276_p2 == 1'd0) & (stream_in_1_TVALID == 1'b0)));
end

assign ap_block_state40_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter63 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter64 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter65 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter66 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter67 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter68 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage0_iter69 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter70 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage0_iter71 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage0_iter72 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter73 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage0_iter74 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage0_iter75 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage0_iter76 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage0_iter77 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state81_io = ((icmp_ln71_reg_668_pp0_iter77_reg == 1'd0) & (stream_out_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state81_pp0_stage0_iter78 = ((icmp_ln71_reg_668_pp0_iter77_reg == 1'd0) & (stream_out_TREADY == 1'b0));
end

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign column_1_fu_616_p2 = (select_ln71_fu_533_p3 + 31'd1);

assign exp_fu_345_p4 = {{reg_fu_330_p1[62:52]}};

assign grp_fu_243_p0 = ret_2_reg_694_pp0_iter61_reg;

assign grp_fu_259_p0 = grp_fu_259_p00;

assign grp_fu_259_p00 = image_h;

assign grp_fu_259_p1 = grp_fu_259_p10;

assign grp_fu_259_p10 = image_w;

assign grp_fu_622_p0 = zext_ln87_fu_293_p1;

assign grp_fu_622_p1 = zext_ln87_fu_293_p1;

assign grp_fu_629_p0 = sext_ln1345_fu_309_p1;

assign grp_fu_629_p1 = sext_ln1345_fu_309_p1;

assign grp_fu_629_p2 = {{grp_fu_622_p2}, {2'd0}};

assign icmp_ln323_fu_363_p2 = ((trunc_ln306_fu_333_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln327_fu_375_p2 = ((exp_fu_345_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign icmp_ln329_fu_381_p2 = (($signed(sh_amt_fu_369_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_387_p2 = (($signed(sh_amt_fu_369_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln337_fu_423_p2 = (($signed(tmp_fu_413_p4) < $signed(7'd1)) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_276_p2 = ((indvar_flatten_reg_203 == grp_fu_259_p2) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_528_p2 = (($signed(zext_ln72_fu_524_p1) < $signed(image_w)) ? 1'b1 : 1'b0);

assign lshr_ln331_fu_436_p2 = zext_ln320_fu_404_p1 >> zext_ln331_fu_432_p1;

assign or_ln327_fu_446_p2 = (icmp_ln327_reg_763 | icmp_ln323_reg_750);

assign or_ln329_fu_513_p2 = (or_ln327_reg_790 | icmp_ln329_reg_769_pp0_iter76_reg);

assign or_ln93_fu_597_p2 = (select_ln71_fu_533_p3 | select_ln71_1_fu_551_p3);

assign p_Result_1_fu_396_p3 = {{1'd1}, {trunc_ln315_fu_393_p1}};

assign p_Val2_1_fu_564_p3 = ((p_Result_s_reg_739_pp0_iter77_reg[0:0] == 1'b1) ? sub_ln455_fu_559_p2 : select_ln329_reg_800);

assign phitmp_fu_578_p4 = {{p_Val2_1_fu_564_p3[16:1]}};

assign reg_fu_330_p1 = val_reg_729;

assign ret_2_fu_313_p2 = (zext_ln215_1_fu_300_p1 + zext_ln215_fu_297_p1);

assign ret_fu_303_p2 = (zext_ln215_fu_297_p1 - zext_ln215_1_fu_300_p1);

assign select_ln323_fu_474_p3 = ((icmp_ln323_reg_750[0:0] == 1'b1) ? 32'd0 : select_ln330_fu_466_p3);

assign select_ln327_fu_491_p3 = ((and_ln327_fu_486_p2[0:0] == 1'b1) ? trunc_ln328_reg_744 : select_ln323_fu_474_p3);

assign select_ln329_fu_517_p3 = ((or_ln329_fu_513_p2[0:0] == 1'b1) ? select_ln327_reg_795 : select_ln337_fu_506_p3);

assign select_ln330_fu_466_p3 = ((and_ln330_1_fu_461_p2[0:0] == 1'b1) ? trunc_ln331_fu_442_p1 : 32'd0);

assign select_ln337_fu_506_p3 = ((icmp_ln337_reg_785[0:0] == 1'b1) ? shl_ln339_fu_501_p2 : 32'd0);

assign select_ln71_1_fu_551_p3 = ((icmp_ln72_fu_528_p2[0:0] == 1'b1) ? line_reg_214 : add_ln71_1_fu_545_p2);

assign select_ln71_fu_533_p3 = ((icmp_ln72_fu_528_p2[0:0] == 1'b1) ? column_reg_225 : 31'd0);

assign sext_ln1345_fu_309_p1 = $signed(ret_fu_303_p2);

assign sext_ln326_fu_498_p1 = sh_amt_1_reg_780;

assign sext_ln331_fu_429_p1 = sh_amt_reg_757;

assign sh_amt_1_fu_408_p2 = ($signed(12'd0) - $signed(sh_amt_reg_757));

assign sh_amt_fu_369_p2 = (12'd1075 - zext_ln311_fu_355_p1);

assign shl_ln339_fu_501_p2 = trunc_ln328_reg_744_pp0_iter76_reg << sext_ln326_fu_498_p1;

assign stream_out_TDATA = ((tmp_1_fu_570_p3[0:0] == 1'b1) ? 16'd0 : phitmp_fu_578_p4);

assign stream_out_TKEEP = 2'd0;

assign stream_out_TLAST = ((zext_ln71_fu_541_p1 == sub_fu_265_p2) ? 1'b1 : 1'b0);

assign stream_out_TSTRB = 2'd0;

assign stream_out_TUSER = ((or_ln93_fu_597_p2 == 31'd0) ? 1'b1 : 1'b0);

assign sub_fu_265_p2 = ($signed(image_w) + $signed(32'd4294967295));

assign sub_ln455_fu_559_p2 = (32'd0 - select_ln329_reg_800);

assign tmp_1_fu_570_p3 = p_Val2_1_fu_564_p3[32'd31];

assign tmp_fu_413_p4 = {{sh_amt_1_fu_408_p2[11:5]}};

assign trunc_ln306_fu_333_p1 = reg_fu_330_p1[62:0];

assign trunc_ln315_fu_393_p1 = reg_reg_734[51:0];

assign trunc_ln328_fu_359_p1 = reg_fu_330_p1[31:0];

assign trunc_ln331_fu_442_p1 = lshr_ln331_fu_436_p2[31:0];

assign xor_ln323_fu_481_p2 = (icmp_ln323_reg_750 ^ 1'd1);

assign xor_ln327_fu_450_p2 = (or_ln327_fu_446_p2 ^ 1'd1);

assign zext_ln215_1_fu_300_p1 = in_element_int_2_data_V_reg_677;

assign zext_ln215_fu_297_p1 = in_element_int_1_data_V_reg_672;

assign zext_ln311_fu_355_p1 = exp_fu_345_p4;

assign zext_ln320_fu_404_p1 = p_Result_1_fu_396_p3;

assign zext_ln331_fu_432_p1 = $unsigned(sext_ln331_fu_429_p1);

assign zext_ln71_fu_541_p1 = select_ln71_fu_533_p3;

assign zext_ln72_fu_524_p1 = column_reg_225;

assign zext_ln87_fu_293_p1 = stream_in_3_TDATA;

endmodule //CornerResponseUnit_CornerResponse
