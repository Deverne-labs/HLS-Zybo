// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="NonMaximalSuppresionUnit_NonMaximalSuppresionUnit,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.614000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=0,HLS_SYN_FF=939,HLS_SYN_LUT=1262,HLS_VERSION=2020_2}" *)

module NonMaximalSuppresionUnit (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_in_TDATA,
        stream_in_TVALID,
        stream_in_TREADY,
        stream_in_TKEEP,
        stream_in_TSTRB,
        stream_in_TUSER,
        stream_in_TLAST,
        stream_out_TDATA,
        stream_out_TVALID,
        stream_out_TREADY,
        stream_out_TKEEP,
        stream_out_TSTRB,
        stream_out_TUSER,
        stream_out_TLAST,
        image_w,
        image_h,
        alpha,
        beta,
        max_response,
        max_response_ap_vld
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] stream_in_TDATA;
input   stream_in_TVALID;
output   stream_in_TREADY;
input  [1:0] stream_in_TKEEP;
input  [1:0] stream_in_TSTRB;
input  [0:0] stream_in_TUSER;
input  [0:0] stream_in_TLAST;
output  [7:0] stream_out_TDATA;
output   stream_out_TVALID;
input   stream_out_TREADY;
output  [0:0] stream_out_TKEEP;
output  [0:0] stream_out_TSTRB;
output  [0:0] stream_out_TUSER;
output  [0:0] stream_out_TLAST;
input  [31:0] image_w;
input  [31:0] image_h;
input  [15:0] alpha;
input  [15:0] beta;
output  [15:0] max_response;
output   max_response_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg max_response_ap_vld;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire    grp_NonMaximalSuppresion_fu_109_ap_start;
wire    grp_NonMaximalSuppresion_fu_109_ap_done;
wire    grp_NonMaximalSuppresion_fu_109_ap_idle;
wire    grp_NonMaximalSuppresion_fu_109_ap_ready;
wire    grp_NonMaximalSuppresion_fu_109_stream_in_TREADY;
wire   [7:0] grp_NonMaximalSuppresion_fu_109_stream_out_TDATA;
wire    grp_NonMaximalSuppresion_fu_109_stream_out_TVALID;
wire    grp_NonMaximalSuppresion_fu_109_stream_out_TREADY;
wire   [0:0] grp_NonMaximalSuppresion_fu_109_stream_out_TKEEP;
wire   [0:0] grp_NonMaximalSuppresion_fu_109_stream_out_TSTRB;
wire   [0:0] grp_NonMaximalSuppresion_fu_109_stream_out_TUSER;
wire   [0:0] grp_NonMaximalSuppresion_fu_109_stream_out_TLAST;
wire   [15:0] grp_NonMaximalSuppresion_fu_109_ap_return;
reg    grp_NonMaximalSuppresion_fu_109_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    regslice_both_stream_out_V_data_V_U_apdone_blk;
reg   [3:0] ap_NS_fsm;
wire    regslice_both_stream_in_V_data_V_U_apdone_blk;
wire   [15:0] stream_in_TDATA_int_regslice;
wire    stream_in_TVALID_int_regslice;
reg    stream_in_TREADY_int_regslice;
wire    regslice_both_stream_in_V_data_V_U_ack_in;
wire    regslice_both_stream_in_V_keep_V_U_apdone_blk;
wire   [1:0] stream_in_TKEEP_int_regslice;
wire    regslice_both_stream_in_V_keep_V_U_vld_out;
wire    regslice_both_stream_in_V_keep_V_U_ack_in;
wire    regslice_both_stream_in_V_strb_V_U_apdone_blk;
wire   [1:0] stream_in_TSTRB_int_regslice;
wire    regslice_both_stream_in_V_strb_V_U_vld_out;
wire    regslice_both_stream_in_V_strb_V_U_ack_in;
wire    regslice_both_stream_in_V_user_V_U_apdone_blk;
wire   [0:0] stream_in_TUSER_int_regslice;
wire    regslice_both_stream_in_V_user_V_U_vld_out;
wire    regslice_both_stream_in_V_user_V_U_ack_in;
wire    regslice_both_stream_in_V_last_V_U_apdone_blk;
wire   [0:0] stream_in_TLAST_int_regslice;
wire    regslice_both_stream_in_V_last_V_U_vld_out;
wire    regslice_both_stream_in_V_last_V_U_ack_in;
wire    stream_out_TREADY_int_regslice;
wire    regslice_both_stream_out_V_data_V_U_vld_out;
wire    regslice_both_stream_out_V_keep_V_U_apdone_blk;
wire    regslice_both_stream_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_stream_out_V_keep_V_U_vld_out;
wire    regslice_both_stream_out_V_strb_V_U_apdone_blk;
wire    regslice_both_stream_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_stream_out_V_strb_V_U_vld_out;
wire    regslice_both_stream_out_V_user_V_U_apdone_blk;
wire    regslice_both_stream_out_V_user_V_U_ack_in_dummy;
wire    regslice_both_stream_out_V_user_V_U_vld_out;
wire    regslice_both_stream_out_V_last_V_U_apdone_blk;
wire    regslice_both_stream_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_stream_out_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 grp_NonMaximalSuppresion_fu_109_ap_start_reg = 1'b0;
end

NonMaximalSuppresionUnit_NonMaximalSuppresion grp_NonMaximalSuppresion_fu_109(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_NonMaximalSuppresion_fu_109_ap_start),
    .ap_done(grp_NonMaximalSuppresion_fu_109_ap_done),
    .ap_idle(grp_NonMaximalSuppresion_fu_109_ap_idle),
    .ap_ready(grp_NonMaximalSuppresion_fu_109_ap_ready),
    .stream_in_TDATA(stream_in_TDATA_int_regslice),
    .stream_in_TVALID(stream_in_TVALID_int_regslice),
    .stream_in_TREADY(grp_NonMaximalSuppresion_fu_109_stream_in_TREADY),
    .stream_in_TKEEP(stream_in_TKEEP_int_regslice),
    .stream_in_TSTRB(stream_in_TSTRB_int_regslice),
    .stream_in_TUSER(stream_in_TUSER_int_regslice),
    .stream_in_TLAST(stream_in_TLAST_int_regslice),
    .stream_out_TDATA(grp_NonMaximalSuppresion_fu_109_stream_out_TDATA),
    .stream_out_TVALID(grp_NonMaximalSuppresion_fu_109_stream_out_TVALID),
    .stream_out_TREADY(grp_NonMaximalSuppresion_fu_109_stream_out_TREADY),
    .stream_out_TKEEP(grp_NonMaximalSuppresion_fu_109_stream_out_TKEEP),
    .stream_out_TSTRB(grp_NonMaximalSuppresion_fu_109_stream_out_TSTRB),
    .stream_out_TUSER(grp_NonMaximalSuppresion_fu_109_stream_out_TUSER),
    .stream_out_TLAST(grp_NonMaximalSuppresion_fu_109_stream_out_TLAST),
    .image_w(image_w),
    .image_h(image_h),
    .alpha(alpha),
    .beta(beta),
    .ap_return(grp_NonMaximalSuppresion_fu_109_ap_return)
);

NonMaximalSuppresionUnit_regslice_both #(
    .DataWidth( 16 ))
regslice_both_stream_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TDATA),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_data_V_U_ack_in),
    .data_out(stream_in_TDATA_int_regslice),
    .vld_out(stream_in_TVALID_int_regslice),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_data_V_U_apdone_blk)
);

NonMaximalSuppresionUnit_regslice_both #(
    .DataWidth( 2 ))
regslice_both_stream_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TKEEP),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_keep_V_U_ack_in),
    .data_out(stream_in_TKEEP_int_regslice),
    .vld_out(regslice_both_stream_in_V_keep_V_U_vld_out),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_keep_V_U_apdone_blk)
);

NonMaximalSuppresionUnit_regslice_both #(
    .DataWidth( 2 ))
regslice_both_stream_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TSTRB),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_strb_V_U_ack_in),
    .data_out(stream_in_TSTRB_int_regslice),
    .vld_out(regslice_both_stream_in_V_strb_V_U_vld_out),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_strb_V_U_apdone_blk)
);

NonMaximalSuppresionUnit_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_in_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TUSER),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_user_V_U_ack_in),
    .data_out(stream_in_TUSER_int_regslice),
    .vld_out(regslice_both_stream_in_V_user_V_U_vld_out),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_user_V_U_apdone_blk)
);

NonMaximalSuppresionUnit_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TLAST),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_last_V_U_ack_in),
    .data_out(stream_in_TLAST_int_regslice),
    .vld_out(regslice_both_stream_in_V_last_V_U_vld_out),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_last_V_U_apdone_blk)
);

NonMaximalSuppresionUnit_regslice_both #(
    .DataWidth( 8 ))
regslice_both_stream_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_NonMaximalSuppresion_fu_109_stream_out_TDATA),
    .vld_in(grp_NonMaximalSuppresion_fu_109_stream_out_TVALID),
    .ack_in(stream_out_TREADY_int_regslice),
    .data_out(stream_out_TDATA),
    .vld_out(regslice_both_stream_out_V_data_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_data_V_U_apdone_blk)
);

NonMaximalSuppresionUnit_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_NonMaximalSuppresion_fu_109_stream_out_TKEEP),
    .vld_in(grp_NonMaximalSuppresion_fu_109_stream_out_TVALID),
    .ack_in(regslice_both_stream_out_V_keep_V_U_ack_in_dummy),
    .data_out(stream_out_TKEEP),
    .vld_out(regslice_both_stream_out_V_keep_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_keep_V_U_apdone_blk)
);

NonMaximalSuppresionUnit_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_NonMaximalSuppresion_fu_109_stream_out_TSTRB),
    .vld_in(grp_NonMaximalSuppresion_fu_109_stream_out_TVALID),
    .ack_in(regslice_both_stream_out_V_strb_V_U_ack_in_dummy),
    .data_out(stream_out_TSTRB),
    .vld_out(regslice_both_stream_out_V_strb_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_strb_V_U_apdone_blk)
);

NonMaximalSuppresionUnit_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_out_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_NonMaximalSuppresion_fu_109_stream_out_TUSER),
    .vld_in(grp_NonMaximalSuppresion_fu_109_stream_out_TVALID),
    .ack_in(regslice_both_stream_out_V_user_V_U_ack_in_dummy),
    .data_out(stream_out_TUSER),
    .vld_out(regslice_both_stream_out_V_user_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_user_V_U_apdone_blk)
);

NonMaximalSuppresionUnit_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_NonMaximalSuppresion_fu_109_stream_out_TLAST),
    .vld_in(grp_NonMaximalSuppresion_fu_109_stream_out_TVALID),
    .ack_in(regslice_both_stream_out_V_last_V_U_ack_in_dummy),
    .data_out(stream_out_TLAST),
    .vld_out(regslice_both_stream_out_V_last_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_NonMaximalSuppresion_fu_109_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_NonMaximalSuppresion_fu_109_ap_start_reg <= 1'b1;
        end else if ((grp_NonMaximalSuppresion_fu_109_ap_ready == 1'b1)) begin
            grp_NonMaximalSuppresion_fu_109_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (regslice_both_stream_out_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (regslice_both_stream_out_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((grp_NonMaximalSuppresion_fu_109_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        max_response_ap_vld = 1'b1;
    end else begin
        max_response_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        stream_in_TREADY_int_regslice = grp_NonMaximalSuppresion_fu_109_stream_in_TREADY;
    end else begin
        stream_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_NonMaximalSuppresion_fu_109_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (regslice_both_stream_out_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_NonMaximalSuppresion_fu_109_ap_start = grp_NonMaximalSuppresion_fu_109_ap_start_reg;

assign grp_NonMaximalSuppresion_fu_109_stream_out_TREADY = (stream_out_TREADY_int_regslice & ap_CS_fsm_state3);

assign max_response = grp_NonMaximalSuppresion_fu_109_ap_return;

assign stream_in_TREADY = regslice_both_stream_in_V_data_V_U_ack_in;

assign stream_out_TVALID = regslice_both_stream_out_V_data_V_U_vld_out;

endmodule //NonMaximalSuppresionUnit
