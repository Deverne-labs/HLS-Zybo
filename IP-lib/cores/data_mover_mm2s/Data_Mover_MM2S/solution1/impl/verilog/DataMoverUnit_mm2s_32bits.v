// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="DataMoverUnit_mm2s_32bits_DataMoverUnit_mm2s_32bits,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=7,HLS_SYN_DSP=0,HLS_SYN_FF=1995,HLS_SYN_LUT=1969,HLS_VERSION=2020_2}" *)

module DataMoverUnit_mm2s_32bits (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_MM_video_in_AWVALID,
        m_axi_MM_video_in_AWREADY,
        m_axi_MM_video_in_AWADDR,
        m_axi_MM_video_in_AWID,
        m_axi_MM_video_in_AWLEN,
        m_axi_MM_video_in_AWSIZE,
        m_axi_MM_video_in_AWBURST,
        m_axi_MM_video_in_AWLOCK,
        m_axi_MM_video_in_AWCACHE,
        m_axi_MM_video_in_AWPROT,
        m_axi_MM_video_in_AWQOS,
        m_axi_MM_video_in_AWREGION,
        m_axi_MM_video_in_AWUSER,
        m_axi_MM_video_in_WVALID,
        m_axi_MM_video_in_WREADY,
        m_axi_MM_video_in_WDATA,
        m_axi_MM_video_in_WSTRB,
        m_axi_MM_video_in_WLAST,
        m_axi_MM_video_in_WID,
        m_axi_MM_video_in_WUSER,
        m_axi_MM_video_in_ARVALID,
        m_axi_MM_video_in_ARREADY,
        m_axi_MM_video_in_ARADDR,
        m_axi_MM_video_in_ARID,
        m_axi_MM_video_in_ARLEN,
        m_axi_MM_video_in_ARSIZE,
        m_axi_MM_video_in_ARBURST,
        m_axi_MM_video_in_ARLOCK,
        m_axi_MM_video_in_ARCACHE,
        m_axi_MM_video_in_ARPROT,
        m_axi_MM_video_in_ARQOS,
        m_axi_MM_video_in_ARREGION,
        m_axi_MM_video_in_ARUSER,
        m_axi_MM_video_in_RVALID,
        m_axi_MM_video_in_RREADY,
        m_axi_MM_video_in_RDATA,
        m_axi_MM_video_in_RLAST,
        m_axi_MM_video_in_RID,
        m_axi_MM_video_in_RUSER,
        m_axi_MM_video_in_RRESP,
        m_axi_MM_video_in_BVALID,
        m_axi_MM_video_in_BREADY,
        m_axi_MM_video_in_BRESP,
        m_axi_MM_video_in_BID,
        m_axi_MM_video_in_BUSER,
        MM_video_in_offset,
        STR_video_out_TDATA,
        STR_video_out_TVALID,
        STR_video_out_TREADY,
        STR_video_out_TKEEP,
        STR_video_out_TSTRB,
        STR_video_out_TUSER,
        STR_video_out_TLAST,
        image_w,
        image_h,
        mm2s_line_buffer_size
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;
parameter    C_M_AXI_MM_VIDEO_IN_ID_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO_IN_ADDR_WIDTH = 32;
parameter    C_M_AXI_MM_VIDEO_IN_DATA_WIDTH = 32;
parameter    C_M_AXI_MM_VIDEO_IN_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO_IN_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO_IN_WUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO_IN_RUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO_IN_BUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO_IN_USER_VALUE = 0;
parameter    C_M_AXI_MM_VIDEO_IN_PROT_VALUE = 0;
parameter    C_M_AXI_MM_VIDEO_IN_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_M_AXI_MM_VIDEO_IN_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_MM_video_in_AWVALID;
input   m_axi_MM_video_in_AWREADY;
output  [C_M_AXI_MM_VIDEO_IN_ADDR_WIDTH - 1:0] m_axi_MM_video_in_AWADDR;
output  [C_M_AXI_MM_VIDEO_IN_ID_WIDTH - 1:0] m_axi_MM_video_in_AWID;
output  [7:0] m_axi_MM_video_in_AWLEN;
output  [2:0] m_axi_MM_video_in_AWSIZE;
output  [1:0] m_axi_MM_video_in_AWBURST;
output  [1:0] m_axi_MM_video_in_AWLOCK;
output  [3:0] m_axi_MM_video_in_AWCACHE;
output  [2:0] m_axi_MM_video_in_AWPROT;
output  [3:0] m_axi_MM_video_in_AWQOS;
output  [3:0] m_axi_MM_video_in_AWREGION;
output  [C_M_AXI_MM_VIDEO_IN_AWUSER_WIDTH - 1:0] m_axi_MM_video_in_AWUSER;
output   m_axi_MM_video_in_WVALID;
input   m_axi_MM_video_in_WREADY;
output  [C_M_AXI_MM_VIDEO_IN_DATA_WIDTH - 1:0] m_axi_MM_video_in_WDATA;
output  [C_M_AXI_MM_VIDEO_IN_WSTRB_WIDTH - 1:0] m_axi_MM_video_in_WSTRB;
output   m_axi_MM_video_in_WLAST;
output  [C_M_AXI_MM_VIDEO_IN_ID_WIDTH - 1:0] m_axi_MM_video_in_WID;
output  [C_M_AXI_MM_VIDEO_IN_WUSER_WIDTH - 1:0] m_axi_MM_video_in_WUSER;
output   m_axi_MM_video_in_ARVALID;
input   m_axi_MM_video_in_ARREADY;
output  [C_M_AXI_MM_VIDEO_IN_ADDR_WIDTH - 1:0] m_axi_MM_video_in_ARADDR;
output  [C_M_AXI_MM_VIDEO_IN_ID_WIDTH - 1:0] m_axi_MM_video_in_ARID;
output  [7:0] m_axi_MM_video_in_ARLEN;
output  [2:0] m_axi_MM_video_in_ARSIZE;
output  [1:0] m_axi_MM_video_in_ARBURST;
output  [1:0] m_axi_MM_video_in_ARLOCK;
output  [3:0] m_axi_MM_video_in_ARCACHE;
output  [2:0] m_axi_MM_video_in_ARPROT;
output  [3:0] m_axi_MM_video_in_ARQOS;
output  [3:0] m_axi_MM_video_in_ARREGION;
output  [C_M_AXI_MM_VIDEO_IN_ARUSER_WIDTH - 1:0] m_axi_MM_video_in_ARUSER;
input   m_axi_MM_video_in_RVALID;
output   m_axi_MM_video_in_RREADY;
input  [C_M_AXI_MM_VIDEO_IN_DATA_WIDTH - 1:0] m_axi_MM_video_in_RDATA;
input   m_axi_MM_video_in_RLAST;
input  [C_M_AXI_MM_VIDEO_IN_ID_WIDTH - 1:0] m_axi_MM_video_in_RID;
input  [C_M_AXI_MM_VIDEO_IN_RUSER_WIDTH - 1:0] m_axi_MM_video_in_RUSER;
input  [1:0] m_axi_MM_video_in_RRESP;
input   m_axi_MM_video_in_BVALID;
output   m_axi_MM_video_in_BREADY;
input  [1:0] m_axi_MM_video_in_BRESP;
input  [C_M_AXI_MM_VIDEO_IN_ID_WIDTH - 1:0] m_axi_MM_video_in_BID;
input  [C_M_AXI_MM_VIDEO_IN_BUSER_WIDTH - 1:0] m_axi_MM_video_in_BUSER;
input  [31:0] MM_video_in_offset;
output  [7:0] STR_video_out_TDATA;
output   STR_video_out_TVALID;
input   STR_video_out_TREADY;
output  [0:0] STR_video_out_TKEEP;
output  [0:0] STR_video_out_TSTRB;
output  [0:0] STR_video_out_TUSER;
output  [0:0] STR_video_out_TLAST;
input  [31:0] image_w;
input  [31:0] image_h;
output  [15:0] mm2s_line_buffer_size;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    MM_video_in_AWREADY;
wire    MM_video_in_WREADY;
reg    MM_video_in_ARVALID;
wire    MM_video_in_ARREADY;
wire    MM_video_in_RVALID;
reg    MM_video_in_RREADY;
wire   [31:0] MM_video_in_RDATA;
wire    MM_video_in_RLAST;
wire   [0:0] MM_video_in_RID;
wire   [0:0] MM_video_in_RUSER;
wire   [1:0] MM_video_in_RRESP;
wire    MM_video_in_BVALID;
wire   [1:0] MM_video_in_BRESP;
wire   [0:0] MM_video_in_BID;
wire   [0:0] MM_video_in_BUSER;
wire    grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWVALID;
wire   [31:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWADDR;
wire   [0:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWID;
wire   [31:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWLEN;
wire   [2:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWSIZE;
wire   [1:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWBURST;
wire   [1:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWLOCK;
wire   [3:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWCACHE;
wire   [2:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWPROT;
wire   [3:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWQOS;
wire   [3:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWREGION;
wire   [0:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWUSER;
wire    grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_WVALID;
wire   [31:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_WDATA;
wire   [3:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_WSTRB;
wire    grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_WLAST;
wire   [0:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_WID;
wire   [0:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_WUSER;
wire    grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARVALID;
wire   [31:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARADDR;
wire   [0:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARID;
wire   [31:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARLEN;
wire   [2:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARSIZE;
wire   [1:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARBURST;
wire   [1:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARLOCK;
wire   [3:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARCACHE;
wire   [2:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARPROT;
wire   [3:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARQOS;
wire   [3:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARREGION;
wire   [0:0] grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARUSER;
wire    grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_RREADY;
wire    grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_BREADY;
wire   [7:0] grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TDATA;
wire   [0:0] grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TKEEP;
wire   [0:0] grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TSTRB;
wire   [0:0] grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TUSER;
wire   [0:0] grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TLAST;
wire    grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TVALID;
wire    grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TREADY;
wire    grp_DataMover_mm2s_32bits_fu_96_ap_start;
wire    grp_DataMover_mm2s_32bits_fu_96_ap_done;
wire    grp_DataMover_mm2s_32bits_fu_96_ap_ready;
wire    grp_DataMover_mm2s_32bits_fu_96_ap_idle;
reg    grp_DataMover_mm2s_32bits_fu_96_ap_continue;
reg    grp_DataMover_mm2s_32bits_fu_96_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_sync_grp_DataMover_mm2s_32bits_fu_96_ap_ready;
wire    ap_sync_grp_DataMover_mm2s_32bits_fu_96_ap_done;
reg    ap_block_state2_on_subcall_done;
reg    ap_sync_reg_grp_DataMover_mm2s_32bits_fu_96_ap_ready;
reg    ap_sync_reg_grp_DataMover_mm2s_32bits_fu_96_ap_done;
wire    ap_CS_fsm_state3;
wire    regslice_both_STR_video_out_V_data_V_U_apdone_blk;
reg   [2:0] ap_NS_fsm;
wire    STR_video_out_TREADY_int_regslice;
wire    regslice_both_STR_video_out_V_data_V_U_vld_out;
wire    regslice_both_STR_video_out_V_keep_V_U_apdone_blk;
wire    regslice_both_STR_video_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_STR_video_out_V_keep_V_U_vld_out;
wire    regslice_both_STR_video_out_V_strb_V_U_apdone_blk;
wire    regslice_both_STR_video_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_STR_video_out_V_strb_V_U_vld_out;
wire    regslice_both_STR_video_out_V_user_V_U_apdone_blk;
wire    regslice_both_STR_video_out_V_user_V_U_ack_in_dummy;
wire    regslice_both_STR_video_out_V_user_V_U_vld_out;
wire    regslice_both_STR_video_out_V_last_V_U_apdone_blk;
wire    regslice_both_STR_video_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_STR_video_out_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 grp_DataMover_mm2s_32bits_fu_96_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_DataMover_mm2s_32bits_fu_96_ap_ready = 1'b0;
#0 ap_sync_reg_grp_DataMover_mm2s_32bits_fu_96_ap_done = 1'b0;
end

DataMoverUnit_mm2s_32bits_MM_video_in_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 64 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_MM_VIDEO_IN_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_MM_VIDEO_IN_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_MM_VIDEO_IN_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_MM_VIDEO_IN_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_MM_VIDEO_IN_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_MM_VIDEO_IN_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_MM_VIDEO_IN_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_MM_VIDEO_IN_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_MM_VIDEO_IN_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MM_VIDEO_IN_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MM_VIDEO_IN_CACHE_VALUE ))
MM_video_in_m_axi_U(
    .AWVALID(m_axi_MM_video_in_AWVALID),
    .AWREADY(m_axi_MM_video_in_AWREADY),
    .AWADDR(m_axi_MM_video_in_AWADDR),
    .AWID(m_axi_MM_video_in_AWID),
    .AWLEN(m_axi_MM_video_in_AWLEN),
    .AWSIZE(m_axi_MM_video_in_AWSIZE),
    .AWBURST(m_axi_MM_video_in_AWBURST),
    .AWLOCK(m_axi_MM_video_in_AWLOCK),
    .AWCACHE(m_axi_MM_video_in_AWCACHE),
    .AWPROT(m_axi_MM_video_in_AWPROT),
    .AWQOS(m_axi_MM_video_in_AWQOS),
    .AWREGION(m_axi_MM_video_in_AWREGION),
    .AWUSER(m_axi_MM_video_in_AWUSER),
    .WVALID(m_axi_MM_video_in_WVALID),
    .WREADY(m_axi_MM_video_in_WREADY),
    .WDATA(m_axi_MM_video_in_WDATA),
    .WSTRB(m_axi_MM_video_in_WSTRB),
    .WLAST(m_axi_MM_video_in_WLAST),
    .WID(m_axi_MM_video_in_WID),
    .WUSER(m_axi_MM_video_in_WUSER),
    .ARVALID(m_axi_MM_video_in_ARVALID),
    .ARREADY(m_axi_MM_video_in_ARREADY),
    .ARADDR(m_axi_MM_video_in_ARADDR),
    .ARID(m_axi_MM_video_in_ARID),
    .ARLEN(m_axi_MM_video_in_ARLEN),
    .ARSIZE(m_axi_MM_video_in_ARSIZE),
    .ARBURST(m_axi_MM_video_in_ARBURST),
    .ARLOCK(m_axi_MM_video_in_ARLOCK),
    .ARCACHE(m_axi_MM_video_in_ARCACHE),
    .ARPROT(m_axi_MM_video_in_ARPROT),
    .ARQOS(m_axi_MM_video_in_ARQOS),
    .ARREGION(m_axi_MM_video_in_ARREGION),
    .ARUSER(m_axi_MM_video_in_ARUSER),
    .RVALID(m_axi_MM_video_in_RVALID),
    .RREADY(m_axi_MM_video_in_RREADY),
    .RDATA(m_axi_MM_video_in_RDATA),
    .RLAST(m_axi_MM_video_in_RLAST),
    .RID(m_axi_MM_video_in_RID),
    .RUSER(m_axi_MM_video_in_RUSER),
    .RRESP(m_axi_MM_video_in_RRESP),
    .BVALID(m_axi_MM_video_in_BVALID),
    .BREADY(m_axi_MM_video_in_BREADY),
    .BRESP(m_axi_MM_video_in_BRESP),
    .BID(m_axi_MM_video_in_BID),
    .BUSER(m_axi_MM_video_in_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(MM_video_in_ARVALID),
    .I_ARREADY(MM_video_in_ARREADY),
    .I_ARADDR(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARADDR),
    .I_ARID(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARID),
    .I_ARLEN(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARLEN),
    .I_ARSIZE(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARSIZE),
    .I_ARLOCK(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARLOCK),
    .I_ARCACHE(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARCACHE),
    .I_ARQOS(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARQOS),
    .I_ARPROT(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARPROT),
    .I_ARUSER(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARUSER),
    .I_ARBURST(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARBURST),
    .I_ARREGION(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARREGION),
    .I_RVALID(MM_video_in_RVALID),
    .I_RREADY(MM_video_in_RREADY),
    .I_RDATA(MM_video_in_RDATA),
    .I_RID(MM_video_in_RID),
    .I_RUSER(MM_video_in_RUSER),
    .I_RRESP(MM_video_in_RRESP),
    .I_RLAST(MM_video_in_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(MM_video_in_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(MM_video_in_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(MM_video_in_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(MM_video_in_BRESP),
    .I_BID(MM_video_in_BID),
    .I_BUSER(MM_video_in_BUSER)
);

DataMoverUnit_mm2s_32bits_DataMover_mm2s_32bits grp_DataMover_mm2s_32bits_fu_96(
    .m_axi_MM_video_in_AWVALID(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWVALID),
    .m_axi_MM_video_in_AWREADY(1'b0),
    .m_axi_MM_video_in_AWADDR(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWADDR),
    .m_axi_MM_video_in_AWID(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWID),
    .m_axi_MM_video_in_AWLEN(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWLEN),
    .m_axi_MM_video_in_AWSIZE(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWSIZE),
    .m_axi_MM_video_in_AWBURST(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWBURST),
    .m_axi_MM_video_in_AWLOCK(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWLOCK),
    .m_axi_MM_video_in_AWCACHE(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWCACHE),
    .m_axi_MM_video_in_AWPROT(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWPROT),
    .m_axi_MM_video_in_AWQOS(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWQOS),
    .m_axi_MM_video_in_AWREGION(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWREGION),
    .m_axi_MM_video_in_AWUSER(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_AWUSER),
    .m_axi_MM_video_in_WVALID(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_WVALID),
    .m_axi_MM_video_in_WREADY(1'b0),
    .m_axi_MM_video_in_WDATA(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_WDATA),
    .m_axi_MM_video_in_WSTRB(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_WSTRB),
    .m_axi_MM_video_in_WLAST(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_WLAST),
    .m_axi_MM_video_in_WID(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_WID),
    .m_axi_MM_video_in_WUSER(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_WUSER),
    .m_axi_MM_video_in_ARVALID(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARVALID),
    .m_axi_MM_video_in_ARREADY(MM_video_in_ARREADY),
    .m_axi_MM_video_in_ARADDR(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARADDR),
    .m_axi_MM_video_in_ARID(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARID),
    .m_axi_MM_video_in_ARLEN(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARLEN),
    .m_axi_MM_video_in_ARSIZE(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARSIZE),
    .m_axi_MM_video_in_ARBURST(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARBURST),
    .m_axi_MM_video_in_ARLOCK(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARLOCK),
    .m_axi_MM_video_in_ARCACHE(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARCACHE),
    .m_axi_MM_video_in_ARPROT(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARPROT),
    .m_axi_MM_video_in_ARQOS(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARQOS),
    .m_axi_MM_video_in_ARREGION(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARREGION),
    .m_axi_MM_video_in_ARUSER(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARUSER),
    .m_axi_MM_video_in_RVALID(MM_video_in_RVALID),
    .m_axi_MM_video_in_RREADY(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_RREADY),
    .m_axi_MM_video_in_RDATA(MM_video_in_RDATA),
    .m_axi_MM_video_in_RLAST(MM_video_in_RLAST),
    .m_axi_MM_video_in_RID(MM_video_in_RID),
    .m_axi_MM_video_in_RUSER(MM_video_in_RUSER),
    .m_axi_MM_video_in_RRESP(MM_video_in_RRESP),
    .m_axi_MM_video_in_BVALID(1'b0),
    .m_axi_MM_video_in_BREADY(grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_BREADY),
    .m_axi_MM_video_in_BRESP(2'd0),
    .m_axi_MM_video_in_BID(1'd0),
    .m_axi_MM_video_in_BUSER(1'd0),
    .MM_video_in_2(MM_video_in_offset),
    .STR_video_out_TDATA(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TDATA),
    .STR_video_out_TKEEP(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TKEEP),
    .STR_video_out_TSTRB(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TSTRB),
    .STR_video_out_TUSER(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TUSER),
    .STR_video_out_TLAST(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TLAST),
    .image_w(image_w),
    .image_h(image_h),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .MM_video_in_2_ap_vld(1'b1),
    .image_w_ap_vld(1'b1),
    .STR_video_out_TVALID(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TVALID),
    .STR_video_out_TREADY(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TREADY),
    .ap_start(grp_DataMover_mm2s_32bits_fu_96_ap_start),
    .ap_done(grp_DataMover_mm2s_32bits_fu_96_ap_done),
    .ap_ready(grp_DataMover_mm2s_32bits_fu_96_ap_ready),
    .ap_idle(grp_DataMover_mm2s_32bits_fu_96_ap_idle),
    .ap_continue(grp_DataMover_mm2s_32bits_fu_96_ap_continue)
);

DataMoverUnit_mm2s_32bits_regslice_both #(
    .DataWidth( 8 ))
regslice_both_STR_video_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TDATA),
    .vld_in(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TVALID),
    .ack_in(STR_video_out_TREADY_int_regslice),
    .data_out(STR_video_out_TDATA),
    .vld_out(regslice_both_STR_video_out_V_data_V_U_vld_out),
    .ack_out(STR_video_out_TREADY),
    .apdone_blk(regslice_both_STR_video_out_V_data_V_U_apdone_blk)
);

DataMoverUnit_mm2s_32bits_regslice_both #(
    .DataWidth( 1 ))
regslice_both_STR_video_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TKEEP),
    .vld_in(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TVALID),
    .ack_in(regslice_both_STR_video_out_V_keep_V_U_ack_in_dummy),
    .data_out(STR_video_out_TKEEP),
    .vld_out(regslice_both_STR_video_out_V_keep_V_U_vld_out),
    .ack_out(STR_video_out_TREADY),
    .apdone_blk(regslice_both_STR_video_out_V_keep_V_U_apdone_blk)
);

DataMoverUnit_mm2s_32bits_regslice_both #(
    .DataWidth( 1 ))
regslice_both_STR_video_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TSTRB),
    .vld_in(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TVALID),
    .ack_in(regslice_both_STR_video_out_V_strb_V_U_ack_in_dummy),
    .data_out(STR_video_out_TSTRB),
    .vld_out(regslice_both_STR_video_out_V_strb_V_U_vld_out),
    .ack_out(STR_video_out_TREADY),
    .apdone_blk(regslice_both_STR_video_out_V_strb_V_U_apdone_blk)
);

DataMoverUnit_mm2s_32bits_regslice_both #(
    .DataWidth( 1 ))
regslice_both_STR_video_out_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TUSER),
    .vld_in(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TVALID),
    .ack_in(regslice_both_STR_video_out_V_user_V_U_ack_in_dummy),
    .data_out(STR_video_out_TUSER),
    .vld_out(regslice_both_STR_video_out_V_user_V_U_vld_out),
    .ack_out(STR_video_out_TREADY),
    .apdone_blk(regslice_both_STR_video_out_V_user_V_U_apdone_blk)
);

DataMoverUnit_mm2s_32bits_regslice_both #(
    .DataWidth( 1 ))
regslice_both_STR_video_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TLAST),
    .vld_in(grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TVALID),
    .ack_in(regslice_both_STR_video_out_V_last_V_U_ack_in_dummy),
    .data_out(STR_video_out_TLAST),
    .vld_out(regslice_both_STR_video_out_V_last_V_U_vld_out),
    .ack_out(STR_video_out_TREADY),
    .apdone_blk(regslice_both_STR_video_out_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_DataMover_mm2s_32bits_fu_96_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_sync_reg_grp_DataMover_mm2s_32bits_fu_96_ap_done <= 1'b0;
        end else if ((grp_DataMover_mm2s_32bits_fu_96_ap_done == 1'b1)) begin
            ap_sync_reg_grp_DataMover_mm2s_32bits_fu_96_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_DataMover_mm2s_32bits_fu_96_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_sync_reg_grp_DataMover_mm2s_32bits_fu_96_ap_ready <= 1'b0;
        end else if ((grp_DataMover_mm2s_32bits_fu_96_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_DataMover_mm2s_32bits_fu_96_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_DataMover_mm2s_32bits_fu_96_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_sync_grp_DataMover_mm2s_32bits_fu_96_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
            grp_DataMover_mm2s_32bits_fu_96_ap_start_reg <= 1'b1;
        end else if ((grp_DataMover_mm2s_32bits_fu_96_ap_ready == 1'b1)) begin
            grp_DataMover_mm2s_32bits_fu_96_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        MM_video_in_ARVALID = grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_ARVALID;
    end else begin
        MM_video_in_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        MM_video_in_RREADY = grp_DataMover_mm2s_32bits_fu_96_m_axi_MM_video_in_RREADY;
    end else begin
        MM_video_in_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_STR_video_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_STR_video_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        grp_DataMover_mm2s_32bits_fu_96_ap_continue = 1'b1;
    end else begin
        grp_DataMover_mm2s_32bits_fu_96_ap_continue = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((regslice_both_STR_video_out_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign STR_video_out_TVALID = regslice_both_STR_video_out_V_data_V_U_vld_out;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((ap_sync_grp_DataMover_mm2s_32bits_fu_96_ap_ready & ap_sync_grp_DataMover_mm2s_32bits_fu_96_ap_done) == 1'b0);
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_grp_DataMover_mm2s_32bits_fu_96_ap_done = (grp_DataMover_mm2s_32bits_fu_96_ap_done | ap_sync_reg_grp_DataMover_mm2s_32bits_fu_96_ap_done);

assign ap_sync_grp_DataMover_mm2s_32bits_fu_96_ap_ready = (grp_DataMover_mm2s_32bits_fu_96_ap_ready | ap_sync_reg_grp_DataMover_mm2s_32bits_fu_96_ap_ready);

assign grp_DataMover_mm2s_32bits_fu_96_STR_video_out_TREADY = (ap_CS_fsm_state2 & STR_video_out_TREADY_int_regslice);

assign grp_DataMover_mm2s_32bits_fu_96_ap_start = grp_DataMover_mm2s_32bits_fu_96_ap_start_reg;

assign mm2s_line_buffer_size = 16'd2048;


// synthesis translate_off
`include "DataMoverUnit_mm2s_32bits_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //DataMoverUnit_mm2s_32bits

