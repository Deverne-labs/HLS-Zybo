-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity DataMoverUnit_mm2s_32bits_dataflow_in_loop_M2S is
port (
    m_axi_MM_video_in_AWVALID : OUT STD_LOGIC;
    m_axi_MM_video_in_AWREADY : IN STD_LOGIC;
    m_axi_MM_video_in_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_MM_video_in_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_in_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_MM_video_in_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_MM_video_in_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_MM_video_in_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_MM_video_in_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_MM_video_in_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_MM_video_in_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_MM_video_in_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_MM_video_in_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_in_WVALID : OUT STD_LOGIC;
    m_axi_MM_video_in_WREADY : IN STD_LOGIC;
    m_axi_MM_video_in_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_MM_video_in_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_MM_video_in_WLAST : OUT STD_LOGIC;
    m_axi_MM_video_in_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_in_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_in_ARVALID : OUT STD_LOGIC;
    m_axi_MM_video_in_ARREADY : IN STD_LOGIC;
    m_axi_MM_video_in_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_MM_video_in_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_in_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_MM_video_in_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_MM_video_in_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_MM_video_in_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_MM_video_in_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_MM_video_in_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_MM_video_in_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_MM_video_in_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_MM_video_in_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_in_RVALID : IN STD_LOGIC;
    m_axi_MM_video_in_RREADY : OUT STD_LOGIC;
    m_axi_MM_video_in_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_MM_video_in_RLAST : IN STD_LOGIC;
    m_axi_MM_video_in_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_in_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_in_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_MM_video_in_BVALID : IN STD_LOGIC;
    m_axi_MM_video_in_BREADY : OUT STD_LOGIC;
    m_axi_MM_video_in_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_MM_video_in_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_MM_video_in_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    MM_video_in_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    image_w : IN STD_LOGIC_VECTOR (31 downto 0);
    i : IN STD_LOGIC_VECTOR (30 downto 0);
    STR_video_out_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    STR_video_out_TKEEP : OUT STD_LOGIC_VECTOR (1 downto 0);
    STR_video_out_TSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    STR_video_out_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    STR_video_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    MM_video_in_2_ap_vld : IN STD_LOGIC;
    image_w_ap_vld : IN STD_LOGIC;
    i_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    STR_video_out_TVALID : OUT STD_LOGIC;
    STR_video_out_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of DataMoverUnit_mm2s_32bits_dataflow_in_loop_M2S is 
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal dataflow_in_loop_M2S_entry3_U0_ap_start : STD_LOGIC;
    signal dataflow_in_loop_M2S_entry3_U0_ap_done : STD_LOGIC;
    signal dataflow_in_loop_M2S_entry3_U0_ap_continue : STD_LOGIC;
    signal dataflow_in_loop_M2S_entry3_U0_ap_idle : STD_LOGIC;
    signal dataflow_in_loop_M2S_entry3_U0_ap_ready : STD_LOGIC;
    signal dataflow_in_loop_M2S_entry3_U0_MM_video_in_2_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_M2S_entry3_U0_MM_video_in_2_out_write : STD_LOGIC;
    signal dataflow_in_loop_M2S_entry3_U0_image_w_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_M2S_entry3_U0_image_w_out_write : STD_LOGIC;
    signal dataflow_in_loop_M2S_entry3_U0_i_out_din : STD_LOGIC_VECTOR (30 downto 0);
    signal dataflow_in_loop_M2S_entry3_U0_i_out_write : STD_LOGIC;
    signal DMAReadMM_U0_ap_start : STD_LOGIC;
    signal DMAReadMM_U0_ap_done : STD_LOGIC;
    signal DMAReadMM_U0_ap_continue : STD_LOGIC;
    signal DMAReadMM_U0_ap_idle : STD_LOGIC;
    signal DMAReadMM_U0_ap_ready : STD_LOGIC;
    signal DMAReadMM_U0_m_axi_MM_video_in_AWVALID : STD_LOGIC;
    signal DMAReadMM_U0_m_axi_MM_video_in_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_WVALID : STD_LOGIC;
    signal DMAReadMM_U0_m_axi_MM_video_in_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_WLAST : STD_LOGIC;
    signal DMAReadMM_U0_m_axi_MM_video_in_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_ARVALID : STD_LOGIC;
    signal DMAReadMM_U0_m_axi_MM_video_in_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal DMAReadMM_U0_m_axi_MM_video_in_RREADY : STD_LOGIC;
    signal DMAReadMM_U0_m_axi_MM_video_in_BREADY : STD_LOGIC;
    signal DMAReadMM_U0_MM_video_in_2_read : STD_LOGIC;
    signal DMAReadMM_U0_image_w_read : STD_LOGIC;
    signal DMAReadMM_U0_i_read : STD_LOGIC;
    signal DMAReadMM_U0_axi_elt_dma_buffer_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal DMAReadMM_U0_axi_elt_dma_buffer_V_ce0 : STD_LOGIC;
    signal DMAReadMM_U0_axi_elt_dma_buffer_V_we0 : STD_LOGIC;
    signal DMAReadMM_U0_axi_elt_dma_buffer_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal DMAReadMM_U0_image_w_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DMAReadMM_U0_image_w_out_write : STD_LOGIC;
    signal DMAReadMM_U0_i_out_din : STD_LOGIC_VECTOR (30 downto 0);
    signal DMAReadMM_U0_i_out_write : STD_LOGIC;
    signal ap_channel_done_axi_elt_dma_buffer_V : STD_LOGIC;
    signal DMAReadMM_U0_axi_elt_dma_buffer_V_full_n : STD_LOGIC;
    signal M2S_FormatLocalBuffer_U0_ap_start : STD_LOGIC;
    signal M2S_FormatLocalBuffer_U0_ap_done : STD_LOGIC;
    signal M2S_FormatLocalBuffer_U0_ap_continue : STD_LOGIC;
    signal M2S_FormatLocalBuffer_U0_ap_idle : STD_LOGIC;
    signal M2S_FormatLocalBuffer_U0_ap_ready : STD_LOGIC;
    signal M2S_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal M2S_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_ce0 : STD_LOGIC;
    signal M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_ce0 : STD_LOGIC;
    signal M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_we0 : STD_LOGIC;
    signal M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_ce1 : STD_LOGIC;
    signal M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_we1 : STD_LOGIC;
    signal M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_channel_done_stream_elt_dma_buffer_V : STD_LOGIC;
    signal M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_full_n : STD_LOGIC;
    signal EmptyLocalBuffer_U0_ap_start : STD_LOGIC;
    signal EmptyLocalBuffer_U0_ap_done : STD_LOGIC;
    signal EmptyLocalBuffer_U0_ap_continue : STD_LOGIC;
    signal EmptyLocalBuffer_U0_ap_idle : STD_LOGIC;
    signal EmptyLocalBuffer_U0_ap_ready : STD_LOGIC;
    signal EmptyLocalBuffer_U0_STR_video_out_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal EmptyLocalBuffer_U0_STR_video_out_TVALID : STD_LOGIC;
    signal EmptyLocalBuffer_U0_STR_video_out_TKEEP : STD_LOGIC_VECTOR (1 downto 0);
    signal EmptyLocalBuffer_U0_STR_video_out_TSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal EmptyLocalBuffer_U0_STR_video_out_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal EmptyLocalBuffer_U0_STR_video_out_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal EmptyLocalBuffer_U0_image_w_read : STD_LOGIC;
    signal EmptyLocalBuffer_U0_i_read : STD_LOGIC;
    signal EmptyLocalBuffer_U0_stream_elt_dma_buffer_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal EmptyLocalBuffer_U0_stream_elt_dma_buffer_V_ce0 : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal axi_elt_dma_buffer_V_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal axi_elt_dma_buffer_V_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal axi_elt_dma_buffer_V_i_full_n : STD_LOGIC;
    signal axi_elt_dma_buffer_V_t_empty_n : STD_LOGIC;
    signal stream_elt_dma_buffer_V_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal stream_elt_dma_buffer_V_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal stream_elt_dma_buffer_V_i_full_n : STD_LOGIC;
    signal stream_elt_dma_buffer_V_t_empty_n : STD_LOGIC;
    signal MM_video_in_2_c_full_n : STD_LOGIC;
    signal MM_video_in_2_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal MM_video_in_2_c_empty_n : STD_LOGIC;
    signal image_w_c1_full_n : STD_LOGIC;
    signal image_w_c1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal image_w_c1_empty_n : STD_LOGIC;
    signal i_c2_full_n : STD_LOGIC;
    signal i_c2_dout : STD_LOGIC_VECTOR (30 downto 0);
    signal i_c2_empty_n : STD_LOGIC;
    signal image_w_c_full_n : STD_LOGIC;
    signal image_w_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal image_w_c_empty_n : STD_LOGIC;
    signal i_c_full_n : STD_LOGIC;
    signal i_c_dout : STD_LOGIC_VECTOR (30 downto 0);
    signal i_c_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_dataflow_in_loop_M2S_entry3_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_dataflow_in_loop_M2S_entry3_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_DMAReadMM_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_DMAReadMM_U0_ap_ready : STD_LOGIC;
    signal dataflow_in_loop_M2S_entry3_U0_start_full_n : STD_LOGIC;
    signal dataflow_in_loop_M2S_entry3_U0_start_write : STD_LOGIC;
    signal DMAReadMM_U0_start_full_n : STD_LOGIC;
    signal DMAReadMM_U0_start_write : STD_LOGIC;
    signal M2S_FormatLocalBuffer_U0_start_full_n : STD_LOGIC;
    signal M2S_FormatLocalBuffer_U0_start_write : STD_LOGIC;
    signal EmptyLocalBuffer_U0_start_full_n : STD_LOGIC;
    signal EmptyLocalBuffer_U0_start_write : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component DataMoverUnit_mm2s_32bits_dataflow_in_loop_M2S_entry3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        MM_video_in_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        image_w : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (30 downto 0);
        MM_video_in_2_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        MM_video_in_2_out_full_n : IN STD_LOGIC;
        MM_video_in_2_out_write : OUT STD_LOGIC;
        image_w_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        image_w_out_full_n : IN STD_LOGIC;
        image_w_out_write : OUT STD_LOGIC;
        i_out_din : OUT STD_LOGIC_VECTOR (30 downto 0);
        i_out_full_n : IN STD_LOGIC;
        i_out_write : OUT STD_LOGIC );
    end component;


    component DataMoverUnit_mm2s_32bits_DMAReadMM IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_MM_video_in_AWVALID : OUT STD_LOGIC;
        m_axi_MM_video_in_AWREADY : IN STD_LOGIC;
        m_axi_MM_video_in_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_MM_video_in_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_in_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_MM_video_in_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_MM_video_in_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_MM_video_in_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_MM_video_in_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_MM_video_in_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_MM_video_in_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_MM_video_in_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_MM_video_in_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_in_WVALID : OUT STD_LOGIC;
        m_axi_MM_video_in_WREADY : IN STD_LOGIC;
        m_axi_MM_video_in_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_MM_video_in_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_MM_video_in_WLAST : OUT STD_LOGIC;
        m_axi_MM_video_in_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_in_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_in_ARVALID : OUT STD_LOGIC;
        m_axi_MM_video_in_ARREADY : IN STD_LOGIC;
        m_axi_MM_video_in_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_MM_video_in_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_in_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_MM_video_in_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_MM_video_in_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_MM_video_in_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_MM_video_in_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_MM_video_in_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_MM_video_in_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_MM_video_in_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_MM_video_in_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_in_RVALID : IN STD_LOGIC;
        m_axi_MM_video_in_RREADY : OUT STD_LOGIC;
        m_axi_MM_video_in_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_MM_video_in_RLAST : IN STD_LOGIC;
        m_axi_MM_video_in_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_in_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_in_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_MM_video_in_BVALID : IN STD_LOGIC;
        m_axi_MM_video_in_BREADY : OUT STD_LOGIC;
        m_axi_MM_video_in_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_MM_video_in_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_MM_video_in_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        MM_video_in_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        MM_video_in_2_empty_n : IN STD_LOGIC;
        MM_video_in_2_read : OUT STD_LOGIC;
        image_w_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        image_w_empty_n : IN STD_LOGIC;
        image_w_read : OUT STD_LOGIC;
        i_dout : IN STD_LOGIC_VECTOR (30 downto 0);
        i_empty_n : IN STD_LOGIC;
        i_read : OUT STD_LOGIC;
        axi_elt_dma_buffer_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        axi_elt_dma_buffer_V_ce0 : OUT STD_LOGIC;
        axi_elt_dma_buffer_V_we0 : OUT STD_LOGIC;
        axi_elt_dma_buffer_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        image_w_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        image_w_out_full_n : IN STD_LOGIC;
        image_w_out_write : OUT STD_LOGIC;
        i_out_din : OUT STD_LOGIC_VECTOR (30 downto 0);
        i_out_full_n : IN STD_LOGIC;
        i_out_write : OUT STD_LOGIC );
    end component;


    component DataMoverUnit_mm2s_32bits_M2S_FormatLocalBuffer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        axi_elt_dma_buffer_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        axi_elt_dma_buffer_V_ce0 : OUT STD_LOGIC;
        axi_elt_dma_buffer_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        stream_elt_dma_buffer_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        stream_elt_dma_buffer_V_ce0 : OUT STD_LOGIC;
        stream_elt_dma_buffer_V_we0 : OUT STD_LOGIC;
        stream_elt_dma_buffer_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        stream_elt_dma_buffer_V_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        stream_elt_dma_buffer_V_ce1 : OUT STD_LOGIC;
        stream_elt_dma_buffer_V_we1 : OUT STD_LOGIC;
        stream_elt_dma_buffer_V_d1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component DataMoverUnit_mm2s_32bits_EmptyLocalBuffer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        STR_video_out_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        STR_video_out_TVALID : OUT STD_LOGIC;
        STR_video_out_TREADY : IN STD_LOGIC;
        STR_video_out_TKEEP : OUT STD_LOGIC_VECTOR (1 downto 0);
        STR_video_out_TSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        STR_video_out_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        STR_video_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        image_w_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        image_w_empty_n : IN STD_LOGIC;
        image_w_read : OUT STD_LOGIC;
        i_dout : IN STD_LOGIC_VECTOR (30 downto 0);
        i_empty_n : IN STD_LOGIC;
        i_read : OUT STD_LOGIC;
        stream_elt_dma_buffer_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        stream_elt_dma_buffer_V_ce0 : OUT STD_LOGIC;
        stream_elt_dma_buffer_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component DataMoverUnit_mm2s_32bits_dataflow_in_loop_M2S_axi_elt_dma_buffer_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component DataMoverUnit_mm2s_32bits_dataflow_in_loop_M2S_stream_elt_dma_buffer_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_we1 : IN STD_LOGIC;
        i_d1 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_we1 : IN STD_LOGIC;
        t_d1 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component DataMoverUnit_mm2s_32bits_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component DataMoverUnit_mm2s_32bits_fifo_w31_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (30 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (30 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component DataMoverUnit_mm2s_32bits_fifo_w32_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component DataMoverUnit_mm2s_32bits_fifo_w31_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (30 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (30 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    dataflow_in_loop_M2S_entry3_U0 : component DataMoverUnit_mm2s_32bits_dataflow_in_loop_M2S_entry3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dataflow_in_loop_M2S_entry3_U0_ap_start,
        ap_done => dataflow_in_loop_M2S_entry3_U0_ap_done,
        ap_continue => dataflow_in_loop_M2S_entry3_U0_ap_continue,
        ap_idle => dataflow_in_loop_M2S_entry3_U0_ap_idle,
        ap_ready => dataflow_in_loop_M2S_entry3_U0_ap_ready,
        MM_video_in_2 => MM_video_in_2,
        image_w => image_w,
        i => i,
        MM_video_in_2_out_din => dataflow_in_loop_M2S_entry3_U0_MM_video_in_2_out_din,
        MM_video_in_2_out_full_n => MM_video_in_2_c_full_n,
        MM_video_in_2_out_write => dataflow_in_loop_M2S_entry3_U0_MM_video_in_2_out_write,
        image_w_out_din => dataflow_in_loop_M2S_entry3_U0_image_w_out_din,
        image_w_out_full_n => image_w_c1_full_n,
        image_w_out_write => dataflow_in_loop_M2S_entry3_U0_image_w_out_write,
        i_out_din => dataflow_in_loop_M2S_entry3_U0_i_out_din,
        i_out_full_n => i_c2_full_n,
        i_out_write => dataflow_in_loop_M2S_entry3_U0_i_out_write);

    DMAReadMM_U0 : component DataMoverUnit_mm2s_32bits_DMAReadMM
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => DMAReadMM_U0_ap_start,
        ap_done => DMAReadMM_U0_ap_done,
        ap_continue => DMAReadMM_U0_ap_continue,
        ap_idle => DMAReadMM_U0_ap_idle,
        ap_ready => DMAReadMM_U0_ap_ready,
        m_axi_MM_video_in_AWVALID => DMAReadMM_U0_m_axi_MM_video_in_AWVALID,
        m_axi_MM_video_in_AWREADY => ap_const_logic_0,
        m_axi_MM_video_in_AWADDR => DMAReadMM_U0_m_axi_MM_video_in_AWADDR,
        m_axi_MM_video_in_AWID => DMAReadMM_U0_m_axi_MM_video_in_AWID,
        m_axi_MM_video_in_AWLEN => DMAReadMM_U0_m_axi_MM_video_in_AWLEN,
        m_axi_MM_video_in_AWSIZE => DMAReadMM_U0_m_axi_MM_video_in_AWSIZE,
        m_axi_MM_video_in_AWBURST => DMAReadMM_U0_m_axi_MM_video_in_AWBURST,
        m_axi_MM_video_in_AWLOCK => DMAReadMM_U0_m_axi_MM_video_in_AWLOCK,
        m_axi_MM_video_in_AWCACHE => DMAReadMM_U0_m_axi_MM_video_in_AWCACHE,
        m_axi_MM_video_in_AWPROT => DMAReadMM_U0_m_axi_MM_video_in_AWPROT,
        m_axi_MM_video_in_AWQOS => DMAReadMM_U0_m_axi_MM_video_in_AWQOS,
        m_axi_MM_video_in_AWREGION => DMAReadMM_U0_m_axi_MM_video_in_AWREGION,
        m_axi_MM_video_in_AWUSER => DMAReadMM_U0_m_axi_MM_video_in_AWUSER,
        m_axi_MM_video_in_WVALID => DMAReadMM_U0_m_axi_MM_video_in_WVALID,
        m_axi_MM_video_in_WREADY => ap_const_logic_0,
        m_axi_MM_video_in_WDATA => DMAReadMM_U0_m_axi_MM_video_in_WDATA,
        m_axi_MM_video_in_WSTRB => DMAReadMM_U0_m_axi_MM_video_in_WSTRB,
        m_axi_MM_video_in_WLAST => DMAReadMM_U0_m_axi_MM_video_in_WLAST,
        m_axi_MM_video_in_WID => DMAReadMM_U0_m_axi_MM_video_in_WID,
        m_axi_MM_video_in_WUSER => DMAReadMM_U0_m_axi_MM_video_in_WUSER,
        m_axi_MM_video_in_ARVALID => DMAReadMM_U0_m_axi_MM_video_in_ARVALID,
        m_axi_MM_video_in_ARREADY => m_axi_MM_video_in_ARREADY,
        m_axi_MM_video_in_ARADDR => DMAReadMM_U0_m_axi_MM_video_in_ARADDR,
        m_axi_MM_video_in_ARID => DMAReadMM_U0_m_axi_MM_video_in_ARID,
        m_axi_MM_video_in_ARLEN => DMAReadMM_U0_m_axi_MM_video_in_ARLEN,
        m_axi_MM_video_in_ARSIZE => DMAReadMM_U0_m_axi_MM_video_in_ARSIZE,
        m_axi_MM_video_in_ARBURST => DMAReadMM_U0_m_axi_MM_video_in_ARBURST,
        m_axi_MM_video_in_ARLOCK => DMAReadMM_U0_m_axi_MM_video_in_ARLOCK,
        m_axi_MM_video_in_ARCACHE => DMAReadMM_U0_m_axi_MM_video_in_ARCACHE,
        m_axi_MM_video_in_ARPROT => DMAReadMM_U0_m_axi_MM_video_in_ARPROT,
        m_axi_MM_video_in_ARQOS => DMAReadMM_U0_m_axi_MM_video_in_ARQOS,
        m_axi_MM_video_in_ARREGION => DMAReadMM_U0_m_axi_MM_video_in_ARREGION,
        m_axi_MM_video_in_ARUSER => DMAReadMM_U0_m_axi_MM_video_in_ARUSER,
        m_axi_MM_video_in_RVALID => m_axi_MM_video_in_RVALID,
        m_axi_MM_video_in_RREADY => DMAReadMM_U0_m_axi_MM_video_in_RREADY,
        m_axi_MM_video_in_RDATA => m_axi_MM_video_in_RDATA,
        m_axi_MM_video_in_RLAST => m_axi_MM_video_in_RLAST,
        m_axi_MM_video_in_RID => m_axi_MM_video_in_RID,
        m_axi_MM_video_in_RUSER => m_axi_MM_video_in_RUSER,
        m_axi_MM_video_in_RRESP => m_axi_MM_video_in_RRESP,
        m_axi_MM_video_in_BVALID => ap_const_logic_0,
        m_axi_MM_video_in_BREADY => DMAReadMM_U0_m_axi_MM_video_in_BREADY,
        m_axi_MM_video_in_BRESP => ap_const_lv2_0,
        m_axi_MM_video_in_BID => ap_const_lv1_0,
        m_axi_MM_video_in_BUSER => ap_const_lv1_0,
        MM_video_in_2_dout => MM_video_in_2_c_dout,
        MM_video_in_2_empty_n => MM_video_in_2_c_empty_n,
        MM_video_in_2_read => DMAReadMM_U0_MM_video_in_2_read,
        image_w_dout => image_w_c1_dout,
        image_w_empty_n => image_w_c1_empty_n,
        image_w_read => DMAReadMM_U0_image_w_read,
        i_dout => i_c2_dout,
        i_empty_n => i_c2_empty_n,
        i_read => DMAReadMM_U0_i_read,
        axi_elt_dma_buffer_V_address0 => DMAReadMM_U0_axi_elt_dma_buffer_V_address0,
        axi_elt_dma_buffer_V_ce0 => DMAReadMM_U0_axi_elt_dma_buffer_V_ce0,
        axi_elt_dma_buffer_V_we0 => DMAReadMM_U0_axi_elt_dma_buffer_V_we0,
        axi_elt_dma_buffer_V_d0 => DMAReadMM_U0_axi_elt_dma_buffer_V_d0,
        image_w_out_din => DMAReadMM_U0_image_w_out_din,
        image_w_out_full_n => image_w_c_full_n,
        image_w_out_write => DMAReadMM_U0_image_w_out_write,
        i_out_din => DMAReadMM_U0_i_out_din,
        i_out_full_n => i_c_full_n,
        i_out_write => DMAReadMM_U0_i_out_write);

    M2S_FormatLocalBuffer_U0 : component DataMoverUnit_mm2s_32bits_M2S_FormatLocalBuffer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => M2S_FormatLocalBuffer_U0_ap_start,
        ap_done => M2S_FormatLocalBuffer_U0_ap_done,
        ap_continue => M2S_FormatLocalBuffer_U0_ap_continue,
        ap_idle => M2S_FormatLocalBuffer_U0_ap_idle,
        ap_ready => M2S_FormatLocalBuffer_U0_ap_ready,
        axi_elt_dma_buffer_V_address0 => M2S_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_address0,
        axi_elt_dma_buffer_V_ce0 => M2S_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_ce0,
        axi_elt_dma_buffer_V_q0 => axi_elt_dma_buffer_V_t_q0,
        stream_elt_dma_buffer_V_address0 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_address0,
        stream_elt_dma_buffer_V_ce0 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_ce0,
        stream_elt_dma_buffer_V_we0 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_we0,
        stream_elt_dma_buffer_V_d0 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_d0,
        stream_elt_dma_buffer_V_address1 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_address1,
        stream_elt_dma_buffer_V_ce1 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_ce1,
        stream_elt_dma_buffer_V_we1 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_we1,
        stream_elt_dma_buffer_V_d1 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_d1);

    EmptyLocalBuffer_U0 : component DataMoverUnit_mm2s_32bits_EmptyLocalBuffer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => EmptyLocalBuffer_U0_ap_start,
        ap_done => EmptyLocalBuffer_U0_ap_done,
        ap_continue => EmptyLocalBuffer_U0_ap_continue,
        ap_idle => EmptyLocalBuffer_U0_ap_idle,
        ap_ready => EmptyLocalBuffer_U0_ap_ready,
        STR_video_out_TDATA => EmptyLocalBuffer_U0_STR_video_out_TDATA,
        STR_video_out_TVALID => EmptyLocalBuffer_U0_STR_video_out_TVALID,
        STR_video_out_TREADY => STR_video_out_TREADY,
        STR_video_out_TKEEP => EmptyLocalBuffer_U0_STR_video_out_TKEEP,
        STR_video_out_TSTRB => EmptyLocalBuffer_U0_STR_video_out_TSTRB,
        STR_video_out_TUSER => EmptyLocalBuffer_U0_STR_video_out_TUSER,
        STR_video_out_TLAST => EmptyLocalBuffer_U0_STR_video_out_TLAST,
        image_w_dout => image_w_c_dout,
        image_w_empty_n => image_w_c_empty_n,
        image_w_read => EmptyLocalBuffer_U0_image_w_read,
        i_dout => i_c_dout,
        i_empty_n => i_c_empty_n,
        i_read => EmptyLocalBuffer_U0_i_read,
        stream_elt_dma_buffer_V_address0 => EmptyLocalBuffer_U0_stream_elt_dma_buffer_V_address0,
        stream_elt_dma_buffer_V_ce0 => EmptyLocalBuffer_U0_stream_elt_dma_buffer_V_ce0,
        stream_elt_dma_buffer_V_q0 => stream_elt_dma_buffer_V_t_q0);

    axi_elt_dma_buffer_V_U : component DataMoverUnit_mm2s_32bits_dataflow_in_loop_M2S_axi_elt_dma_buffer_V
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => DMAReadMM_U0_axi_elt_dma_buffer_V_address0,
        i_ce0 => DMAReadMM_U0_axi_elt_dma_buffer_V_ce0,
        i_we0 => DMAReadMM_U0_axi_elt_dma_buffer_V_we0,
        i_d0 => DMAReadMM_U0_axi_elt_dma_buffer_V_d0,
        i_q0 => axi_elt_dma_buffer_V_i_q0,
        t_address0 => M2S_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_address0,
        t_ce0 => M2S_FormatLocalBuffer_U0_axi_elt_dma_buffer_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => axi_elt_dma_buffer_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => axi_elt_dma_buffer_V_i_full_n,
        i_write => DMAReadMM_U0_ap_done,
        t_empty_n => axi_elt_dma_buffer_V_t_empty_n,
        t_read => M2S_FormatLocalBuffer_U0_ap_ready);

    stream_elt_dma_buffer_V_U : component DataMoverUnit_mm2s_32bits_dataflow_in_loop_M2S_stream_elt_dma_buffer_V
    generic map (
        DataWidth => 16,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_address0,
        i_ce0 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_ce0,
        i_we0 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_we0,
        i_d0 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_d0,
        i_q0 => stream_elt_dma_buffer_V_i_q0,
        i_address1 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_address1,
        i_ce1 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_ce1,
        i_we1 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_we1,
        i_d1 => M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_d1,
        t_address0 => EmptyLocalBuffer_U0_stream_elt_dma_buffer_V_address0,
        t_ce0 => EmptyLocalBuffer_U0_stream_elt_dma_buffer_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => stream_elt_dma_buffer_V_t_q0,
        t_address1 => ap_const_lv11_0,
        t_ce1 => ap_const_logic_0,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv16_0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => stream_elt_dma_buffer_V_i_full_n,
        i_write => M2S_FormatLocalBuffer_U0_ap_done,
        t_empty_n => stream_elt_dma_buffer_V_t_empty_n,
        t_read => EmptyLocalBuffer_U0_ap_ready);

    MM_video_in_2_c_U : component DataMoverUnit_mm2s_32bits_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_M2S_entry3_U0_MM_video_in_2_out_din,
        if_full_n => MM_video_in_2_c_full_n,
        if_write => dataflow_in_loop_M2S_entry3_U0_MM_video_in_2_out_write,
        if_dout => MM_video_in_2_c_dout,
        if_empty_n => MM_video_in_2_c_empty_n,
        if_read => DMAReadMM_U0_MM_video_in_2_read);

    image_w_c1_U : component DataMoverUnit_mm2s_32bits_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_M2S_entry3_U0_image_w_out_din,
        if_full_n => image_w_c1_full_n,
        if_write => dataflow_in_loop_M2S_entry3_U0_image_w_out_write,
        if_dout => image_w_c1_dout,
        if_empty_n => image_w_c1_empty_n,
        if_read => DMAReadMM_U0_image_w_read);

    i_c2_U : component DataMoverUnit_mm2s_32bits_fifo_w31_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_M2S_entry3_U0_i_out_din,
        if_full_n => i_c2_full_n,
        if_write => dataflow_in_loop_M2S_entry3_U0_i_out_write,
        if_dout => i_c2_dout,
        if_empty_n => i_c2_empty_n,
        if_read => DMAReadMM_U0_i_read);

    image_w_c_U : component DataMoverUnit_mm2s_32bits_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => DMAReadMM_U0_image_w_out_din,
        if_full_n => image_w_c_full_n,
        if_write => DMAReadMM_U0_image_w_out_write,
        if_dout => image_w_c_dout,
        if_empty_n => image_w_c_empty_n,
        if_read => EmptyLocalBuffer_U0_image_w_read);

    i_c_U : component DataMoverUnit_mm2s_32bits_fifo_w31_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => DMAReadMM_U0_i_out_din,
        if_full_n => i_c_full_n,
        if_write => DMAReadMM_U0_i_out_write,
        if_dout => i_c_dout,
        if_empty_n => i_c_empty_n,
        if_read => EmptyLocalBuffer_U0_i_read);





    ap_sync_reg_DMAReadMM_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_DMAReadMM_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_DMAReadMM_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_DMAReadMM_U0_ap_ready <= ap_sync_DMAReadMM_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_dataflow_in_loop_M2S_entry3_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_dataflow_in_loop_M2S_entry3_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_dataflow_in_loop_M2S_entry3_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_dataflow_in_loop_M2S_entry3_U0_ap_ready <= ap_sync_dataflow_in_loop_M2S_entry3_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    DMAReadMM_U0_ap_continue <= axi_elt_dma_buffer_V_i_full_n;
    DMAReadMM_U0_ap_start <= ((ap_sync_reg_DMAReadMM_U0_ap_ready xor ap_const_logic_1) and ap_start);
    DMAReadMM_U0_axi_elt_dma_buffer_V_full_n <= axi_elt_dma_buffer_V_i_full_n;
    DMAReadMM_U0_start_full_n <= ap_const_logic_1;
    DMAReadMM_U0_start_write <= ap_const_logic_0;
    EmptyLocalBuffer_U0_ap_continue <= ap_continue;
    EmptyLocalBuffer_U0_ap_start <= stream_elt_dma_buffer_V_t_empty_n;
    EmptyLocalBuffer_U0_start_full_n <= ap_const_logic_1;
    EmptyLocalBuffer_U0_start_write <= ap_const_logic_0;
    M2S_FormatLocalBuffer_U0_ap_continue <= stream_elt_dma_buffer_V_i_full_n;
    M2S_FormatLocalBuffer_U0_ap_start <= axi_elt_dma_buffer_V_t_empty_n;
    M2S_FormatLocalBuffer_U0_start_full_n <= ap_const_logic_1;
    M2S_FormatLocalBuffer_U0_start_write <= ap_const_logic_0;
    M2S_FormatLocalBuffer_U0_stream_elt_dma_buffer_V_full_n <= stream_elt_dma_buffer_V_i_full_n;
    STR_video_out_TDATA <= EmptyLocalBuffer_U0_STR_video_out_TDATA;
    STR_video_out_TKEEP <= EmptyLocalBuffer_U0_STR_video_out_TKEEP;
    STR_video_out_TLAST <= EmptyLocalBuffer_U0_STR_video_out_TLAST;
    STR_video_out_TSTRB <= EmptyLocalBuffer_U0_STR_video_out_TSTRB;
    STR_video_out_TUSER <= EmptyLocalBuffer_U0_STR_video_out_TUSER;
    STR_video_out_TVALID <= EmptyLocalBuffer_U0_STR_video_out_TVALID;
    ap_channel_done_axi_elt_dma_buffer_V <= DMAReadMM_U0_ap_done;
    ap_channel_done_stream_elt_dma_buffer_V <= M2S_FormatLocalBuffer_U0_ap_done;
    ap_done <= EmptyLocalBuffer_U0_ap_done;
    ap_idle <= ((stream_elt_dma_buffer_V_t_empty_n xor ap_const_logic_1) and (axi_elt_dma_buffer_V_t_empty_n xor ap_const_logic_1) and dataflow_in_loop_M2S_entry3_U0_ap_idle and M2S_FormatLocalBuffer_U0_ap_idle and EmptyLocalBuffer_U0_ap_idle and DMAReadMM_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_DMAReadMM_U0_ap_ready <= (ap_sync_reg_DMAReadMM_U0_ap_ready or DMAReadMM_U0_ap_ready);
    ap_sync_continue <= ap_continue;
    ap_sync_dataflow_in_loop_M2S_entry3_U0_ap_ready <= (dataflow_in_loop_M2S_entry3_U0_ap_ready or ap_sync_reg_dataflow_in_loop_M2S_entry3_U0_ap_ready);
    ap_sync_done <= EmptyLocalBuffer_U0_ap_done;
    ap_sync_ready <= (ap_sync_dataflow_in_loop_M2S_entry3_U0_ap_ready and ap_sync_DMAReadMM_U0_ap_ready);
    dataflow_in_loop_M2S_entry3_U0_ap_continue <= ap_const_logic_1;
    dataflow_in_loop_M2S_entry3_U0_ap_start <= ((ap_sync_reg_dataflow_in_loop_M2S_entry3_U0_ap_ready xor ap_const_logic_1) and ap_start);
    dataflow_in_loop_M2S_entry3_U0_start_full_n <= ap_const_logic_1;
    dataflow_in_loop_M2S_entry3_U0_start_write <= ap_const_logic_0;
    m_axi_MM_video_in_ARADDR <= DMAReadMM_U0_m_axi_MM_video_in_ARADDR;
    m_axi_MM_video_in_ARBURST <= DMAReadMM_U0_m_axi_MM_video_in_ARBURST;
    m_axi_MM_video_in_ARCACHE <= DMAReadMM_U0_m_axi_MM_video_in_ARCACHE;
    m_axi_MM_video_in_ARID <= DMAReadMM_U0_m_axi_MM_video_in_ARID;
    m_axi_MM_video_in_ARLEN <= DMAReadMM_U0_m_axi_MM_video_in_ARLEN;
    m_axi_MM_video_in_ARLOCK <= DMAReadMM_U0_m_axi_MM_video_in_ARLOCK;
    m_axi_MM_video_in_ARPROT <= DMAReadMM_U0_m_axi_MM_video_in_ARPROT;
    m_axi_MM_video_in_ARQOS <= DMAReadMM_U0_m_axi_MM_video_in_ARQOS;
    m_axi_MM_video_in_ARREGION <= DMAReadMM_U0_m_axi_MM_video_in_ARREGION;
    m_axi_MM_video_in_ARSIZE <= DMAReadMM_U0_m_axi_MM_video_in_ARSIZE;
    m_axi_MM_video_in_ARUSER <= DMAReadMM_U0_m_axi_MM_video_in_ARUSER;
    m_axi_MM_video_in_ARVALID <= DMAReadMM_U0_m_axi_MM_video_in_ARVALID;
    m_axi_MM_video_in_AWADDR <= ap_const_lv32_0;
    m_axi_MM_video_in_AWBURST <= ap_const_lv2_0;
    m_axi_MM_video_in_AWCACHE <= ap_const_lv4_0;
    m_axi_MM_video_in_AWID <= ap_const_lv1_0;
    m_axi_MM_video_in_AWLEN <= ap_const_lv32_0;
    m_axi_MM_video_in_AWLOCK <= ap_const_lv2_0;
    m_axi_MM_video_in_AWPROT <= ap_const_lv3_0;
    m_axi_MM_video_in_AWQOS <= ap_const_lv4_0;
    m_axi_MM_video_in_AWREGION <= ap_const_lv4_0;
    m_axi_MM_video_in_AWSIZE <= ap_const_lv3_0;
    m_axi_MM_video_in_AWUSER <= ap_const_lv1_0;
    m_axi_MM_video_in_AWVALID <= ap_const_logic_0;
    m_axi_MM_video_in_BREADY <= ap_const_logic_0;
    m_axi_MM_video_in_RREADY <= DMAReadMM_U0_m_axi_MM_video_in_RREADY;
    m_axi_MM_video_in_WDATA <= ap_const_lv32_0;
    m_axi_MM_video_in_WID <= ap_const_lv1_0;
    m_axi_MM_video_in_WLAST <= ap_const_logic_0;
    m_axi_MM_video_in_WSTRB <= ap_const_lv4_0;
    m_axi_MM_video_in_WUSER <= ap_const_lv1_0;
    m_axi_MM_video_in_WVALID <= ap_const_logic_0;
end behav;
