-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity VideoMixerUnit_VideoMixer is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    video_stream_in_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    video_stream_in_TVALID : IN STD_LOGIC;
    video_stream_in_TREADY : OUT STD_LOGIC;
    video_stream_in_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    video_stream_in_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    video_stream_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    video_stream_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    overlay_stream_in_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    overlay_stream_in_TVALID : IN STD_LOGIC;
    overlay_stream_in_TREADY : OUT STD_LOGIC;
    overlay_stream_in_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    overlay_stream_in_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    overlay_stream_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    overlay_stream_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    video_stream_out_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    video_stream_out_TVALID : OUT STD_LOGIC;
    video_stream_out_TREADY : IN STD_LOGIC;
    video_stream_out_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    video_stream_out_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    video_stream_out_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    video_stream_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    image_h : IN STD_LOGIC_VECTOR (11 downto 0);
    image_w : IN STD_LOGIC_VECTOR (11 downto 0) );
end;


architecture behav of VideoMixerUnit_VideoMixer is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv24_FFFF : STD_LOGIC_VECTOR (23 downto 0) := "000000001111111111111111";
    constant ap_const_lv24_FFFFFF : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111111111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal video_stream_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln26_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overlay_stream_in_TDATA_blk_n : STD_LOGIC;
    signal video_stream_out_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal icmp_ln26_reg_413 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_reg_154 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln708_fu_175_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal cmp_i3_fu_179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_V_1_fu_185_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_V_1_reg_377 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln25_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i101_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i101_reg_386 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln357_fu_210_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal cmp_i_i65_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i65_reg_401 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_1_fu_219_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal input_video_element_data_V_reg_417 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_i_i117_user_reg_425 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i117_last_reg_430 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln886_reg_435 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln31_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln31_reg_441 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_fu_256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_reg_447 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_1_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_1_reg_452 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_2_fu_267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_2_reg_457 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal i_V_reg_143 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_Result_s_fu_165_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_1_fu_201_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_video_element_data_V_fu_272_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln39_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_1_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_fu_282_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal xor_ln37_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln870_1_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln870_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln870_2_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln39_fu_299_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln886_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln886_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln886_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln870_fu_326_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln25_fu_191_p2 = ap_const_lv1_0) and (cmp_i3_fu_179_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((icmp_ln25_fu_191_p2 = ap_const_lv1_0) and (cmp_i3_fu_179_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_V_reg_143_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_V_reg_143 <= i_V_1_reg_377;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_V_reg_143 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    j_V_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_fu_225_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_V_reg_154 <= j_V_1_fu_219_p2;
            elsif (((icmp_ln25_fu_191_p2 = ap_const_lv1_0) and (cmp_i3_fu_179_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_V_reg_154 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln26_fu_225_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln31_reg_441 <= and_ln31_fu_251_p2;
                icmp_ln870_1_reg_452 <= icmp_ln870_1_fu_262_p2;
                icmp_ln870_2_reg_457 <= icmp_ln870_2_fu_267_p2;
                icmp_ln870_reg_447 <= icmp_ln870_fu_256_p2;
                icmp_ln886_reg_435 <= icmp_ln886_fu_246_p2;
                input_video_element_data_V_reg_417 <= video_stream_in_TDATA;
                tmp_i_i117_last_reg_430 <= video_stream_in_TLAST;
                tmp_i_i117_user_reg_425 <= video_stream_in_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_191_p2 = ap_const_lv1_0) and (cmp_i3_fu_179_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                cmp_i_i101_reg_386 <= cmp_i_i101_fu_196_p2;
                cmp_i_i65_reg_401 <= cmp_i_i65_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_1_reg_377 <= i_V_1_fu_185_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln26_reg_413 <= icmp_ln26_fu_225_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln26_fu_225_p2, cmp_i3_fu_179_p2, ap_CS_fsm_state2, icmp_ln25_fu_191_p2, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln25_fu_191_p2 = ap_const_lv1_0) and (cmp_i3_fu_179_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln25_fu_191_p2 = ap_const_lv1_0) and (cmp_i3_fu_179_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln26_fu_225_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln26_fu_225_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    and_ln31_fu_251_p2 <= (icmp_ln886_fu_246_p2 and cmp_i_i101_reg_386);
    and_ln39_fu_278_p2 <= (icmp_ln870_1_reg_452 and cmp_i_i101_reg_386);
    and_ln870_1_fu_316_p2 <= (icmp_ln870_2_reg_457 and cmp_i_i65_reg_401);
    and_ln870_2_fu_320_p2 <= (and_ln870_fu_311_p2 and and_ln870_1_fu_316_p2);
    and_ln870_fu_311_p2 <= (xor_ln37_fu_306_p2 and cmp_i_i101_reg_386);
    and_ln886_fu_343_p2 <= (xor_ln886_fu_337_p2 and cmp_i_i65_reg_401);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(video_stream_in_TVALID, overlay_stream_in_TVALID, video_stream_out_TREADY, ap_enable_reg_pp0_iter0, icmp_ln26_fu_225_p2, ap_enable_reg_pp0_iter1, icmp_ln26_reg_413)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln26_reg_413 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (video_stream_out_TREADY = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln26_fu_225_p2 = ap_const_lv1_0) and (overlay_stream_in_TVALID = ap_const_logic_0)) or ((icmp_ln26_fu_225_p2 = ap_const_lv1_0) and (video_stream_in_TVALID = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(video_stream_in_TVALID, overlay_stream_in_TVALID, video_stream_out_TREADY, ap_enable_reg_pp0_iter0, icmp_ln26_fu_225_p2, ap_enable_reg_pp0_iter1, icmp_ln26_reg_413, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or ((icmp_ln26_reg_413 = ap_const_lv1_0) and (video_stream_out_TREADY = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln26_fu_225_p2 = ap_const_lv1_0) and (overlay_stream_in_TVALID = ap_const_logic_0)) or ((icmp_ln26_fu_225_p2 = ap_const_lv1_0) and (video_stream_in_TVALID = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(video_stream_in_TVALID, overlay_stream_in_TVALID, video_stream_out_TREADY, ap_enable_reg_pp0_iter0, icmp_ln26_fu_225_p2, ap_enable_reg_pp0_iter1, icmp_ln26_reg_413, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state4_io) or ((icmp_ln26_reg_413 = ap_const_lv1_0) and (video_stream_out_TREADY = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln26_fu_225_p2 = ap_const_lv1_0) and (overlay_stream_in_TVALID = ap_const_logic_0)) or ((icmp_ln26_fu_225_p2 = ap_const_lv1_0) and (video_stream_in_TVALID = ap_const_logic_0)))));
    end process;


    ap_block_state3_pp0_stage0_iter0_assign_proc : process(video_stream_in_TVALID, overlay_stream_in_TVALID, icmp_ln26_fu_225_p2)
    begin
                ap_block_state3_pp0_stage0_iter0 <= (((icmp_ln26_fu_225_p2 = ap_const_lv1_0) and (overlay_stream_in_TVALID = ap_const_logic_0)) or ((icmp_ln26_fu_225_p2 = ap_const_lv1_0) and (video_stream_in_TVALID = ap_const_logic_0)));
    end process;


    ap_block_state4_io_assign_proc : process(video_stream_out_TREADY, icmp_ln26_reg_413)
    begin
                ap_block_state4_io <= ((icmp_ln26_reg_413 = ap_const_lv1_0) and (video_stream_out_TREADY = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter1_assign_proc : process(video_stream_out_TREADY, icmp_ln26_reg_413)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((icmp_ln26_reg_413 = ap_const_lv1_0) and (video_stream_out_TREADY = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln26_fu_225_p2)
    begin
        if ((icmp_ln26_fu_225_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i3_fu_179_p2 <= "1" when (image_w = ap_const_lv12_0) else "0";
    cmp_i_i101_fu_196_p2 <= "1" when (unsigned(i_V_reg_143) < unsigned(zext_ln708_fu_175_p1)) else "0";
    cmp_i_i65_fu_214_p2 <= "1" when (i_V_reg_143 = zext_ln708_fu_175_p1) else "0";
    i_V_1_fu_185_p2 <= std_logic_vector(unsigned(i_V_reg_143) + unsigned(ap_const_lv12_1));
    icmp_ln25_fu_191_p2 <= "1" when (i_V_reg_143 = image_h) else "0";
    icmp_ln26_fu_225_p2 <= "1" when (j_V_reg_154 = image_w) else "0";
    icmp_ln870_1_fu_262_p2 <= "1" when (j_V_reg_154 = zext_ln357_fu_210_p1) else "0";
    icmp_ln870_2_fu_267_p2 <= "0" when (j_V_reg_154 = zext_ln357_fu_210_p1) else "1";
    icmp_ln870_fu_256_p2 <= "1" when (overlay_stream_in_TDATA = ap_const_lv8_FF) else "0";
    icmp_ln886_fu_246_p2 <= "1" when (unsigned(j_V_reg_154) > unsigned(zext_ln357_fu_210_p1)) else "0";
    j_V_1_fu_219_p2 <= std_logic_vector(unsigned(j_V_reg_154) + unsigned(ap_const_lv12_1));
    or_ln39_1_fu_294_p2 <= (or_ln39_fu_289_p2 or and_ln31_reg_441);
    or_ln39_fu_289_p2 <= (cmp_i_i65_reg_401 or and_ln39_fu_278_p2);
    or_ln886_fu_333_p2 <= (icmp_ln886_reg_435 or cmp_i_i101_reg_386);
    output_video_element_data_V_fu_272_p3 <= 
        ap_const_lv24_FFFF when (icmp_ln870_reg_447(0) = '1') else 
        input_video_element_data_V_reg_417;

    overlay_stream_in_TDATA_blk_n_assign_proc : process(overlay_stream_in_TVALID, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln26_fu_225_p2)
    begin
        if (((icmp_ln26_fu_225_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            overlay_stream_in_TDATA_blk_n <= overlay_stream_in_TVALID;
        else 
            overlay_stream_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    overlay_stream_in_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln26_fu_225_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln26_fu_225_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            overlay_stream_in_TREADY <= ap_const_logic_1;
        else 
            overlay_stream_in_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_201_p4 <= image_w(11 downto 1);
    p_Result_s_fu_165_p4 <= image_h(11 downto 1);
    select_ln31_fu_282_p3 <= 
        output_video_element_data_V_fu_272_p3 when (and_ln31_reg_441(0) = '1') else 
        ap_const_lv24_FFFFFF;
    select_ln39_fu_299_p3 <= 
        select_ln31_fu_282_p3 when (or_ln39_1_fu_294_p2(0) = '1') else 
        input_video_element_data_V_reg_417;
    select_ln870_fu_326_p3 <= 
        input_video_element_data_V_reg_417 when (and_ln870_2_fu_320_p2(0) = '1') else 
        select_ln39_fu_299_p3;

    video_stream_in_TDATA_blk_n_assign_proc : process(video_stream_in_TVALID, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln26_fu_225_p2)
    begin
        if (((icmp_ln26_fu_225_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            video_stream_in_TDATA_blk_n <= video_stream_in_TVALID;
        else 
            video_stream_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    video_stream_in_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln26_fu_225_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln26_fu_225_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            video_stream_in_TREADY <= ap_const_logic_1;
        else 
            video_stream_in_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    video_stream_out_TDATA <= 
        input_video_element_data_V_reg_417 when (and_ln886_fu_343_p2(0) = '1') else 
        select_ln870_fu_326_p3;

    video_stream_out_TDATA_blk_n_assign_proc : process(video_stream_out_TREADY, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln26_reg_413)
    begin
        if (((icmp_ln26_reg_413 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            video_stream_out_TDATA_blk_n <= video_stream_out_TREADY;
        else 
            video_stream_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    video_stream_out_TKEEP <= ap_const_lv3_0;
    video_stream_out_TLAST <= tmp_i_i117_last_reg_430;
    video_stream_out_TSTRB <= ap_const_lv3_0;
    video_stream_out_TUSER <= tmp_i_i117_user_reg_425;

    video_stream_out_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln26_reg_413, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln26_reg_413 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            video_stream_out_TVALID <= ap_const_logic_1;
        else 
            video_stream_out_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln37_fu_306_p2 <= (icmp_ln886_reg_435 xor ap_const_lv1_1);
    xor_ln886_fu_337_p2 <= (or_ln886_fu_333_p2 xor ap_const_lv1_1);
    zext_ln357_fu_210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_201_p4),12));
    zext_ln708_fu_175_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_165_p4),12));
end behav;
